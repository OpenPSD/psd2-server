// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * 2018 - OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/openpsd/psd2-server/models"
)

// PaymentIDByPaymentServiceAndPaymentProductGetReader is a Reader for the PaymentIDByPaymentServiceAndPaymentProductGet structure.
type PaymentIDByPaymentServiceAndPaymentProductGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PaymentIDByPaymentServiceAndPaymentProductGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPaymentIDByPaymentServiceAndPaymentProductGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPaymentIDByPaymentServiceAndPaymentProductGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPaymentIDByPaymentServiceAndPaymentProductGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPaymentIDByPaymentServiceAndPaymentProductGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPaymentIDByPaymentServiceAndPaymentProductGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPaymentIDByPaymentServiceAndPaymentProductGetOK creates a PaymentIDByPaymentServiceAndPaymentProductGetOK with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductGetOK() *PaymentIDByPaymentServiceAndPaymentProductGetOK {
	return &PaymentIDByPaymentServiceAndPaymentProductGetOK{}
}

/*PaymentIDByPaymentServiceAndPaymentProductGetOK handles this case with default header values.

OK
*/
type PaymentIDByPaymentServiceAndPaymentProductGetOK struct {
	Payload PaymentIDByPaymentServiceAndPaymentProductGetOKBody
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetOK) Error() string {
	return fmt.Sprintf("[GET /{payment-service}/{payment-product}/{paymentId}][%d] paymentIdByPaymentServiceAndPaymentProductGetOK  %+v", 200, o.Payload)
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentIDByPaymentServiceAndPaymentProductGetBadRequest creates a PaymentIDByPaymentServiceAndPaymentProductGetBadRequest with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductGetBadRequest() *PaymentIDByPaymentServiceAndPaymentProductGetBadRequest {
	return &PaymentIDByPaymentServiceAndPaymentProductGetBadRequest{}
}

/*PaymentIDByPaymentServiceAndPaymentProductGetBadRequest handles this case with default header values.

Bad Request
*/
type PaymentIDByPaymentServiceAndPaymentProductGetBadRequest struct {
	Payload *models.TppMessage
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /{payment-service}/{payment-product}/{paymentId}][%d] paymentIdByPaymentServiceAndPaymentProductGetBadRequest  %+v", 400, o.Payload)
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentIDByPaymentServiceAndPaymentProductGetUnauthorized creates a PaymentIDByPaymentServiceAndPaymentProductGetUnauthorized with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductGetUnauthorized() *PaymentIDByPaymentServiceAndPaymentProductGetUnauthorized {
	return &PaymentIDByPaymentServiceAndPaymentProductGetUnauthorized{}
}

/*PaymentIDByPaymentServiceAndPaymentProductGetUnauthorized handles this case with default header values.

Unauthorized
*/
type PaymentIDByPaymentServiceAndPaymentProductGetUnauthorized struct {
	Payload *models.TppMessage
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{payment-service}/{payment-product}/{paymentId}][%d] paymentIdByPaymentServiceAndPaymentProductGetUnauthorized  %+v", 401, o.Payload)
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentIDByPaymentServiceAndPaymentProductGetForbidden creates a PaymentIDByPaymentServiceAndPaymentProductGetForbidden with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductGetForbidden() *PaymentIDByPaymentServiceAndPaymentProductGetForbidden {
	return &PaymentIDByPaymentServiceAndPaymentProductGetForbidden{}
}

/*PaymentIDByPaymentServiceAndPaymentProductGetForbidden handles this case with default header values.

Forbidden
*/
type PaymentIDByPaymentServiceAndPaymentProductGetForbidden struct {
	Payload *models.TppMessage
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetForbidden) Error() string {
	return fmt.Sprintf("[GET /{payment-service}/{payment-product}/{paymentId}][%d] paymentIdByPaymentServiceAndPaymentProductGetForbidden  %+v", 403, o.Payload)
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPaymentIDByPaymentServiceAndPaymentProductGetDefault creates a PaymentIDByPaymentServiceAndPaymentProductGetDefault with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductGetDefault(code int) *PaymentIDByPaymentServiceAndPaymentProductGetDefault {
	return &PaymentIDByPaymentServiceAndPaymentProductGetDefault{
		_statusCode: code,
	}
}

/*PaymentIDByPaymentServiceAndPaymentProductGetDefault handles this case with default header values.

Internal Server Error
*/
type PaymentIDByPaymentServiceAndPaymentProductGetDefault struct {
	_statusCode int

	Payload *models.TppMessage
}

// Code gets the status code for the payment Id by payment service and payment product get default response
func (o *PaymentIDByPaymentServiceAndPaymentProductGetDefault) Code() int {
	return o._statusCode
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetDefault) Error() string {
	return fmt.Sprintf("[GET /{payment-service}/{payment-product}/{paymentId}][%d] PaymentIdByPaymentServiceAndPaymentProductGet default  %+v", o._statusCode, o.Payload)
}

func (o *PaymentIDByPaymentServiceAndPaymentProductGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PaymentIDByPaymentServiceAndPaymentProductGetOKBody payment ID by payment service and payment product get o k body
swagger:model PaymentIDByPaymentServiceAndPaymentProductGetOKBody
*/
type PaymentIDByPaymentServiceAndPaymentProductGetOKBody interface{}
