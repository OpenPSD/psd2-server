// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/openpsd/psd2-server/models"
)

// AccountsByAccountIDGetReader is a Reader for the AccountsByAccountIDGet structure.
type AccountsByAccountIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountsByAccountIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAccountsByAccountIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAccountsByAccountIDGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAccountsByAccountIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAccountsByAccountIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAccountsByAccountIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAccountsByAccountIDGetOK creates a AccountsByAccountIDGetOK with default headers values
func NewAccountsByAccountIDGetOK() *AccountsByAccountIDGetOK {
	return &AccountsByAccountIDGetOK{}
}

/*AccountsByAccountIDGetOK handles this case with default header values.

OK
*/
type AccountsByAccountIDGetOK struct {
	Payload *models.AccountsResponse18
}

func (o *AccountsByAccountIDGetOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}][%d] accountsByAccountIdGetOK  %+v", 200, o.Payload)
}

func (o *AccountsByAccountIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountsResponse18)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsByAccountIDGetBadRequest creates a AccountsByAccountIDGetBadRequest with default headers values
func NewAccountsByAccountIDGetBadRequest() *AccountsByAccountIDGetBadRequest {
	return &AccountsByAccountIDGetBadRequest{}
}

/*AccountsByAccountIDGetBadRequest handles this case with default header values.

Bad Request
*/
type AccountsByAccountIDGetBadRequest struct {
	Payload *models.TppMessage
}

func (o *AccountsByAccountIDGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}][%d] accountsByAccountIdGetBadRequest  %+v", 400, o.Payload)
}

func (o *AccountsByAccountIDGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsByAccountIDGetUnauthorized creates a AccountsByAccountIDGetUnauthorized with default headers values
func NewAccountsByAccountIDGetUnauthorized() *AccountsByAccountIDGetUnauthorized {
	return &AccountsByAccountIDGetUnauthorized{}
}

/*AccountsByAccountIDGetUnauthorized handles this case with default header values.

Unauthorized
*/
type AccountsByAccountIDGetUnauthorized struct {
	Payload *models.TppMessage
}

func (o *AccountsByAccountIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}][%d] accountsByAccountIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *AccountsByAccountIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsByAccountIDGetForbidden creates a AccountsByAccountIDGetForbidden with default headers values
func NewAccountsByAccountIDGetForbidden() *AccountsByAccountIDGetForbidden {
	return &AccountsByAccountIDGetForbidden{}
}

/*AccountsByAccountIDGetForbidden handles this case with default header values.

Forbidden
*/
type AccountsByAccountIDGetForbidden struct {
	Payload *models.TppMessage
}

func (o *AccountsByAccountIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}][%d] accountsByAccountIdGetForbidden  %+v", 403, o.Payload)
}

func (o *AccountsByAccountIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsByAccountIDGetDefault creates a AccountsByAccountIDGetDefault with default headers values
func NewAccountsByAccountIDGetDefault(code int) *AccountsByAccountIDGetDefault {
	return &AccountsByAccountIDGetDefault{
		_statusCode: code,
	}
}

/*AccountsByAccountIDGetDefault handles this case with default header values.

Internal Server Error
*/
type AccountsByAccountIDGetDefault struct {
	_statusCode int

	Payload *models.TppMessage
}

// Code gets the status code for the accounts by account Id get default response
func (o *AccountsByAccountIDGetDefault) Code() int {
	return o._statusCode
}

func (o *AccountsByAccountIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}][%d] AccountsByAccountIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *AccountsByAccountIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
