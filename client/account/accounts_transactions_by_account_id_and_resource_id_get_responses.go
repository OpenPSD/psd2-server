// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * 2018 - OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/openpsd/psd2-server/models"
)

// AccountsTransactionsByAccountIDAndResourceIDGetReader is a Reader for the AccountsTransactionsByAccountIDAndResourceIDGet structure.
type AccountsTransactionsByAccountIDAndResourceIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountsTransactionsByAccountIDAndResourceIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAccountsTransactionsByAccountIDAndResourceIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAccountsTransactionsByAccountIDAndResourceIDGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAccountsTransactionsByAccountIDAndResourceIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAccountsTransactionsByAccountIDAndResourceIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAccountsTransactionsByAccountIDAndResourceIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetOK creates a AccountsTransactionsByAccountIDAndResourceIDGetOK with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetOK() *AccountsTransactionsByAccountIDAndResourceIDGetOK {
	return &AccountsTransactionsByAccountIDAndResourceIDGetOK{}
}

/*AccountsTransactionsByAccountIDAndResourceIDGetOK handles this case with default header values.

OK
*/
type AccountsTransactionsByAccountIDAndResourceIDGetOK struct {
	Payload *models.AccountsTransactionsResponse81
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetOK) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}/transactions/{resourceId}][%d] accountsTransactionsByAccountIdAndResourceIdGetOK  %+v", 200, o.Payload)
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountsTransactionsResponse81)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetBadRequest creates a AccountsTransactionsByAccountIDAndResourceIDGetBadRequest with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetBadRequest() *AccountsTransactionsByAccountIDAndResourceIDGetBadRequest {
	return &AccountsTransactionsByAccountIDAndResourceIDGetBadRequest{}
}

/*AccountsTransactionsByAccountIDAndResourceIDGetBadRequest handles this case with default header values.

Bad Request
*/
type AccountsTransactionsByAccountIDAndResourceIDGetBadRequest struct {
	Payload *models.TppMessage
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}/transactions/{resourceId}][%d] accountsTransactionsByAccountIdAndResourceIdGetBadRequest  %+v", 400, o.Payload)
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetUnauthorized creates a AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetUnauthorized() *AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized {
	return &AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized{}
}

/*AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized handles this case with default header values.

Unauthorized
*/
type AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized struct {
	Payload *models.TppMessage
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}/transactions/{resourceId}][%d] accountsTransactionsByAccountIdAndResourceIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetForbidden creates a AccountsTransactionsByAccountIDAndResourceIDGetForbidden with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetForbidden() *AccountsTransactionsByAccountIDAndResourceIDGetForbidden {
	return &AccountsTransactionsByAccountIDAndResourceIDGetForbidden{}
}

/*AccountsTransactionsByAccountIDAndResourceIDGetForbidden handles this case with default header values.

Forbidden
*/
type AccountsTransactionsByAccountIDAndResourceIDGetForbidden struct {
	Payload *models.TppMessage
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}/transactions/{resourceId}][%d] accountsTransactionsByAccountIdAndResourceIdGetForbidden  %+v", 403, o.Payload)
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetDefault creates a AccountsTransactionsByAccountIDAndResourceIDGetDefault with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetDefault(code int) *AccountsTransactionsByAccountIDAndResourceIDGetDefault {
	return &AccountsTransactionsByAccountIDAndResourceIDGetDefault{
		_statusCode: code,
	}
}

/*AccountsTransactionsByAccountIDAndResourceIDGetDefault handles this case with default header values.

Internal Server Error
*/
type AccountsTransactionsByAccountIDAndResourceIDGetDefault struct {
	_statusCode int

	Payload *models.TppMessage
}

// Code gets the status code for the accounts transactions by account Id and resource Id get default response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetDefault) Code() int {
	return o._statusCode
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /accounts/{account-id}/transactions/{resourceId}][%d] AccountsTransactionsByAccountIdAndResourceIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TppMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
