// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TransactionStatus TransactionStatus
// swagger:model TransactionStatus
type TransactionStatus string

const (

	// TransactionStatusACCP captures enum value "ACCP"
	TransactionStatusACCP TransactionStatus = "ACCP"

	// TransactionStatusACSC captures enum value "ACSC"
	TransactionStatusACSC TransactionStatus = "ACSC"

	// TransactionStatusACSP captures enum value "ACSP"
	TransactionStatusACSP TransactionStatus = "ACSP"

	// TransactionStatusACTC captures enum value "ACTC"
	TransactionStatusACTC TransactionStatus = "ACTC"

	// TransactionStatusACWC captures enum value "ACWC"
	TransactionStatusACWC TransactionStatus = "ACWC"

	// TransactionStatusACWP captures enum value "ACWP"
	TransactionStatusACWP TransactionStatus = "ACWP"

	// TransactionStatusRCVD captures enum value "RCVD"
	TransactionStatusRCVD TransactionStatus = "RCVD"

	// TransactionStatusPDNG captures enum value "PDNG"
	TransactionStatusPDNG TransactionStatus = "PDNG"

	// TransactionStatusRJCT captures enum value "RJCT"
	TransactionStatusRJCT TransactionStatus = "RJCT"
)

// for schema
var transactionStatusEnum []interface{}

func init() {
	var res []TransactionStatus
	if err := json.Unmarshal([]byte(`["ACCP","ACSC","ACSP","ACTC","ACWC","ACWP","RCVD","PDNG","RJCT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		transactionStatusEnum = append(transactionStatusEnum, v)
	}
}

func (m TransactionStatus) validateTransactionStatusEnum(path, location string, value TransactionStatus) error {
	if err := validate.Enum(path, location, value, transactionStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this transaction status
func (m TransactionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTransactionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
