// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * 2018 - OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountReference AccountReference
// swagger:model AccountReference
type AccountReference struct {

	// This data element can be used in the body of the Consent Request Message for retrieving account access consent from this account. This data elements is used for payment accounts which have no IBAN.
	Bban string `json:"bban,omitempty"`

	// ISO 4217 Alpha 3 currency code
	// Max Length: 3
	Currency string `json:"currency,omitempty"`

	// This data element can be used in the body of the Consent Request Message for retrieving account access consent from this payment account.
	// Pattern: ^[A-Z]{2}[0-9]{2}[A-Z0-9]{1-30}$
	Iban string `json:"iban,omitempty"`

	// Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.
	// Max Length: 35
	MaskedPan string `json:"maskedPan,omitempty"`

	// An alias to access a payment account via a registered mobile phone number. This alias might be needed e.g. in the payment initiation service. The support of this alias must be explicitly documented by the ASPSP for the corresponding API Calls.
	// Max Length: 35
	Msisdn string `json:"msisdn,omitempty"`

	// Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.
	// Max Length: 35
	Pan string `json:"pan,omitempty"`
}

// Validate validates this account reference
func (m *AccountReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrency(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIban(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaskedPan(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMsisdn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePan(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountReference) validateCurrency(formats strfmt.Registry) error {

	if swag.IsZero(m.Currency) { // not required
		return nil
	}

	if err := validate.MaxLength("currency", "body", string(m.Currency), 3); err != nil {
		return err
	}

	return nil
}

func (m *AccountReference) validateIban(formats strfmt.Registry) error {

	if swag.IsZero(m.Iban) { // not required
		return nil
	}

	if err := validate.Pattern("iban", "body", string(m.Iban), `^[A-Z]{2}[0-9]{2}[A-Z0-9]{1-30}$`); err != nil {
		return err
	}

	return nil
}

func (m *AccountReference) validateMaskedPan(formats strfmt.Registry) error {

	if swag.IsZero(m.MaskedPan) { // not required
		return nil
	}

	if err := validate.MaxLength("maskedPan", "body", string(m.MaskedPan), 35); err != nil {
		return err
	}

	return nil
}

func (m *AccountReference) validateMsisdn(formats strfmt.Registry) error {

	if swag.IsZero(m.Msisdn) { // not required
		return nil
	}

	if err := validate.MaxLength("msisdn", "body", string(m.Msisdn), 35); err != nil {
		return err
	}

	return nil
}

func (m *AccountReference) validatePan(formats strfmt.Registry) error {

	if swag.IsZero(m.Pan) { // not required
		return nil
	}

	if err := validate.MaxLength("pan", "body", string(m.Pan), 35); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountReference) UnmarshalBinary(b []byte) error {
	var res AccountReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
