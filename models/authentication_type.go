// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * 2018 - OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// AuthenticationType AuthenticationType
// swagger:model AuthenticationType
type AuthenticationType string

const (

	// AuthenticationTypeSMSOTP captures enum value "SMS_OTP"
	AuthenticationTypeSMSOTP AuthenticationType = "SMS_OTP"

	// AuthenticationTypeCHIPOTP captures enum value "CHIP_OTP"
	AuthenticationTypeCHIPOTP AuthenticationType = "CHIP_OTP"

	// AuthenticationTypePHOTOOTP captures enum value "PHOTO_OTP"
	AuthenticationTypePHOTOOTP AuthenticationType = "PHOTO_OTP"

	// AuthenticationTypePUSHOTP captures enum value "PUSH_OTP"
	AuthenticationTypePUSHOTP AuthenticationType = "PUSH_OTP"
)

// for schema
var authenticationTypeEnum []interface{}

func init() {
	var res []AuthenticationType
	if err := json.Unmarshal([]byte(`["SMS_OTP","CHIP_OTP","PHOTO_OTP","PUSH_OTP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		authenticationTypeEnum = append(authenticationTypeEnum, v)
	}
}

func (m AuthenticationType) validateAuthenticationTypeEnum(path, location string, value AuthenticationType) error {
	if err := validate.Enum(path, location, value, authenticationTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this authentication type
func (m AuthenticationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAuthenticationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
