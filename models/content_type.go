// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ContentType Content-Type
// swagger:model ContentType
type ContentType string

const (

	// ContentTypeApplicationJSON captures enum value "application/json"
	ContentTypeApplicationJSON ContentType = "application/json"

	// ContentTypeApplicationXML captures enum value "application/xml"
	ContentTypeApplicationXML ContentType = "application/xml"

	// ContentTypeApplicationText captures enum value "application/text"
	ContentTypeApplicationText ContentType = "application/text"
)

// for schema
var contentTypeEnum []interface{}

func init() {
	var res []ContentType
	if err := json.Unmarshal([]byte(`["application/json","application/xml","application/text"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contentTypeEnum = append(contentTypeEnum, v)
	}
}

func (m ContentType) validateContentTypeEnum(path, location string, value ContentType) error {
	if err := validate.Enum(path, location, value, contentTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this content type
func (m ContentType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateContentTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
