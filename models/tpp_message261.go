// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * 2018 - OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TppMessage261 TppMessage261
// swagger:model TppMessage261
type TppMessage261 struct {

	// category
	// Required: true
	Category Category `json:"category"`

	// code
	// Required: true
	Code MessageCode `json:"code"`

	// path
	Path string `json:"path,omitempty"`

	// text
	// Required: true
	// Max Length: 512
	Text *string `json:"text"`
}

// Validate validates this tpp message261
func (m *TppMessage261) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateText(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TppMessage261) validateCategory(formats strfmt.Registry) error {

	if err := m.Category.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("category")
		}
		return err
	}

	return nil
}

func (m *TppMessage261) validateCode(formats strfmt.Registry) error {

	if err := m.Code.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("code")
		}
		return err
	}

	return nil
}

func (m *TppMessage261) validateText(formats strfmt.Registry) error {

	if err := validate.Required("text", "body", m.Text); err != nil {
		return err
	}

	if err := validate.MaxLength("text", "body", string(*m.Text), 512); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TppMessage261) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TppMessage261) UnmarshalBinary(b []byte) error {
	var res TppMessage261
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
