// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "PSD2 API based on the Berlin Group specs\n",
    "title": "OpenPSD PSD2",
    "version": "0.0.1"
  },
  "host": "api.openpsd.org",
  "basePath": "/psd2/v1",
  "paths": {
    "/accounts": {
      "get": {
        "description": "Reads a list of bank accounts, with balances where required. It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. The addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, respectively the OAuth2 access token.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "list of accounts",
        "operationId": "AccountsGet",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, if granted by the PSU in the related consent and available by the ASPSP. This parameter might be ignored by the ASPSP.",
            "name": "withBalance",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/accounts/{account-id}": {
      "get": {
        "description": "Reads a list of bank accounts, with balances where required. It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. The addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, respectively the OAuth2 access token.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "account details",
        "operationId": "AccountsByAccountIdGet",
        "parameters": [
          {
            "type": "string",
            "description": "This identification is denoting the addressed account. The account-id is retrieved by using a \"Read Account List\" call. The account-id is the \"resourceId\" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.",
            "name": "account-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, if granted by the PSU in the related consent and available by the ASPSP. This parameter might be ignored by the ASPSP.",
            "name": "withBalance",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsResponse18"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/accounts/{account-id}/balances": {
      "get": {
        "description": "Reads the balance list for a given account.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "balances for account",
        "operationId": "AccountsBalancesByAccountIdGet",
        "parameters": [
          {
            "type": "string",
            "description": "This identification is denoting the addressed account. The account-id is retrieved by using a \"Read Account List\" call. The account-id is the \"resourceId\" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.",
            "name": "account-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsBalancesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/accounts/{account-id}/transactions": {
      "get": {
        "description": "Reads a transaction list For a given account, additional parameters are e.g. the attributes “date_from” and “date_to”. If the attribute “withbalance” is used, the ASPSP will add balances to the transaction list. The latter might be provided by the ASPSP anyhow, if transaction lists without balances are not supported.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "transactions for account",
        "operationId": "AccountsTransactionsByAccountIdGet",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "This identification is denoting the addressed account. The account-id is retrieved by using a \"Read Account List\" call. The account-id is the \"resourceId\" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.",
            "name": "account-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Permitted codes are \"booked\", \"pending\" and \"both \"booked\" shall be supported by the ASPSP. To support the \"pending\" and \"both\" feature is optional for the ASPSP, Error code if not supported in the online banking frontend",
            "name": "bookingStatus",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required",
            "name": "dateFrom",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "End date (inclusive the data dateTo) of the transaction list, default is now if not given.",
            "name": "dateTo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the transaction with identification entryReferenceFrom alternatively to the above defined period. This is a implementation of a delta access. If this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the ASPSP if a delta report is supported.",
            "name": "entryReferenceFrom",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report. This delta indicator might be rejected by the ASPSP if this function is not supported.",
            "name": "deltaList",
            "in": "query"
          },
          {
            "enum": [
              "xml",
              "JSON",
              "text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "xml"
              },
              {
                "description": "",
                "name": "JSON"
              },
              {
                "description": "",
                "name": "text"
              }
            ],
            "description": "The TPP can indicate the formats of account reports supported together with a priorisation following the HTTP header definition.",
            "name": "Accept",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsTransactionsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/accounts/{account-id}/transactions/{resourceId}": {
      "get": {
        "security": [],
        "description": "Reads transaction details of an addressed transaction.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "transaction details for transaction of an account",
        "operationId": "AccountsTransactionsByAccountIdAndResourceIdGet",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 35,
            "type": "string",
            "description": "This identification is given by the attribute resourceId of the corresponding entry of a transaction list.",
            "name": "resourceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "This identification is denoting the addressed account. The account-id is retrieved by using a \"Read Account List\" call. The account-id is the \"resourceId\" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.",
            "name": "account-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsTransactionsResponse81"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/bulk-payments/{payment-product}": {
      "post": {
        "description": "Creates a payment initiation resource addressable under {paymentId} with all data relevant for the corresponding payment product. This is the first step in the API to initiate the related payment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "create a bulk payment",
        "operationId": "BulkPaymentsByPaymentProductPost",
        "parameters": [
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "application/json",
              "application/xml",
              "application/text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "Enum_applicationjson"
              },
              {
                "description": "",
                "name": "Enum_applicationxml"
              },
              {
                "description": "",
                "name": "Enum_applicationtext"
              }
            ],
            "description": "Content-Type",
            "name": "Content-Type",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP.",
            "name": "PSU-IP-Address",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BulkPaymentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/consents": {
      "post": {
        "description": "Creates a consent resource, defining access rights to dedicated accounts of a given PSU-ID. These accounts must be addressed explicitly in the method as parameters.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "create a consent",
        "operationId": "ConsentsPost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConsentsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Consent Request was correctly performed.",
            "schema": {
              "$ref": "#/definitions/ConsentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/consents/{consentId}": {
      "get": {
        "description": "Reads the exact definition of the given consent resource {consentId}",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "get consent details",
        "operationId": "ConsentsByConsentIdGet",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request",
            "name": "consentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConsentsResponse125"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      },
      "put": {
        "description": "Updates data on the consent resource, authorises a consent within the Embedded SCA Approach where needed.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "update consent",
        "operationId": "ConsentsByConsentIdPut",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request",
            "name": "consentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConsentsRequest144"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConsentsResponse146"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      },
      "delete": {
        "description": "Deletes a created consent with ID.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "delete consent",
        "operationId": "ConsentsByConsentIdDelete",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request",
            "name": "consentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Consent resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/consents/{consentId}/status": {
      "get": {
        "description": "Reads the transaction status of the addressed consent resource.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "get status of a consent",
        "operationId": "ConsentsStatusByConsentIdGet",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request",
            "name": "consentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction status",
            "schema": {
              "$ref": "#/definitions/ConsentsStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/funds-confirmations": {
      "post": {
        "description": "Checks whether funds are available for a payment transaction on an account linked with a given tuple cardissuer/cardnumber, or an IBAN and TPP respectively",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Funds"
        ],
        "summary": "check funds",
        "operationId": "FundsConfirmationsPost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundsConfirmationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FundsConfirmationsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/payments/{payment-product}": {
      "post": {
        "description": "Creates a payment initiation resource addressable under {paymentId} with all data relevant for the corresponding payment product. This is the first step in the API to initiate the related payment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "create a single payment",
        "operationId": "PaymentsByPaymentProductPost",
        "parameters": [
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "application/json",
              "application/xml",
              "application/text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "Enum_applicationjson"
              },
              {
                "description": "",
                "name": "Enum_applicationxml"
              },
              {
                "description": "",
                "name": "Enum_applicationtext"
              }
            ],
            "description": "Content-Type",
            "name": "Content-Type",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP.",
            "name": "PSU-IP-Address",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/periodic-payments/{payment-product}": {
      "post": {
        "description": "Creates a payment initiation resource addressable under {paymentID} with all data relevant for the corresponding payment product. This is the first step in the API to initiate the related payment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "create a periodic payment",
        "operationId": "PeriodicPaymentsByPaymentProductPost",
        "parameters": [
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "application/json",
              "application/xml",
              "application/text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "Enum_applicationjson"
              },
              {
                "description": "",
                "name": "Enum_applicationxml"
              },
              {
                "description": "",
                "name": "Enum_applicationtext"
              }
            ],
            "description": "Content-Type",
            "name": "Content-Type",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP.",
            "name": "PSU-IP-Address",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeriodicPaymentsRequest"
            }
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PeriodicPaymentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/{payment-service}/{payment-product}/{paymentId}": {
      "get": {
        "description": "Reads the details of an initiated payment.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "get payment details",
        "operationId": "PaymentIdByPaymentServiceAndPaymentProductGet",
        "parameters": [
          {
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "payments"
              },
              {
                "description": "",
                "name": "bulkpayments"
              },
              {
                "description": "",
                "name": "periodicpayments"
              }
            ],
            "description": "The payment service to use.",
            "name": "payment-service",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "payment Id",
            "name": "paymentId",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "application/json",
              "application/xml",
              "application/text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "Enum_applicationjson"
              },
              {
                "description": "",
                "name": "Enum_applicationxml"
              },
              {
                "description": "",
                "name": "Enum_applicationtext"
              }
            ],
            "description": "Content-Type",
            "name": "Content-Type",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP.",
            "name": "PSU-IP-Address",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      },
      "put": {
        "description": "Updates data on the payment resource if needed. It may authorise a payment within the Embedded SCA Approach where needed.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "update payment",
        "operationId": "PaymentIdByPaymentServiceAndPaymentProductPut",
        "parameters": [
          {
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "payments"
              },
              {
                "description": "",
                "name": "bulkpayments"
              },
              {
                "description": "",
                "name": "periodicpayments"
              }
            ],
            "description": "The payment service to use.",
            "name": "payment-service",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "payment Id",
            "name": "paymentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PaymentidRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK result with Decoupled Approach",
            "schema": {
              "$ref": "#/definitions/PaymentidResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/{payment-service}/{payment-product}/{paymentId}/status": {
      "get": {
        "description": "Reads the transaction status of the payment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "get the status of a payment",
        "operationId": "PaymentIdStatusByPaymentServiceAndPaymentProductGet",
        "parameters": [
          {
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "payments"
              },
              {
                "description": "",
                "name": "bulkpayments"
              },
              {
                "description": "",
                "name": "periodicpayments"
              }
            ],
            "description": "The payment service to use.",
            "name": "payment-service",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "payment Id",
            "name": "paymentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentidStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    }
  },
  "definitions": {
    "Accept": {
      "type": "string",
      "title": "Accept",
      "enum": [
        "xml",
        "JSON",
        "text"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "xml"
        },
        {
          "description": "",
          "name": "JSON"
        },
        {
          "description": "",
          "name": "text"
        }
      ],
      "example": "xml"
    },
    "AccountAccess": {
      "type": "object",
      "title": "AccountAccess",
      "properties": {
        "accounts": {
          "description": "Is asking for detailed account information. If the array is empty, the TPP is asking for an accessible account list. This may be restricted in a PSU/ASPSP authorization dialogue.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountReference"
          }
        },
        "allPsd2": {
          "description": "Optional if supported by API provide. Only the value \"allAccounts\" is admitted.",
          "type": "string",
          "default": "allAccounts",
          "example": "allAccounts"
        },
        "availableAccounts": {
          "$ref": "#/definitions/AvailableAccounts"
        },
        "balances": {
          "description": "Is asking for balances of the addressed accounts. If the array is empty, the TPP is asking for the balances of all accessible account lists. This may be restricted in a PSU/ASPSP authorization dialogue",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountReference"
          }
        },
        "transactions": {
          "description": "Is asking for transactions of the addressed accounts. If the array is empty, the TPP is asking for the transactions of all accessible account lists. This may be restricted in a PSU/ASPSP authorization dialogue",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountReference"
          }
        }
      }
    },
    "AccountDetails": {
      "type": "object",
      "title": "AccountDetails",
      "required": [
        "currency"
      ],
      "properties": {
        "_links": {
          "description": "Links to the account, which can be directly used for retrieving account information from this dedicated account. Links to “balances” and/or “transactions”",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Balance"
          }
        },
        "bban": {
          "description": "This data element can be used in the body of the Consent Request Message for retrieving account access consent from this account. This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "bic": {
          "description": "The BIC associated to the account.",
          "type": "string"
        },
        "cashAccountType": {
          "description": "ExternalCashAccountType1Code from ISO 20022",
          "type": "string"
        },
        "currency": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        },
        "details": {
          "description": "Specifications that might be provided by the ASPSP - characteristics of the account - characteristics of the relevant card",
          "type": "string",
          "maxLength": 140
        },
        "iban": {
          "description": "This data element can be used in the body of the Consent Request Message for retrieving account access consent from this payment account.",
          "type": "string",
          "example": "DE89370400440532013000"
        },
        "linkedAccounts": {
          "description": "Case of a set of pending card transactions, the APSP will provide the relevant cash account the card is set up on.",
          "type": "string",
          "maxLength": 70
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.",
          "type": "string",
          "maxLength": 35
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number. This alias might be needed e.g. in the payment initiation service. The support of this alias must be explicitly documented by the ASPSP for the corresponding API Calls.",
          "type": "string",
          "maxLength": 35
        },
        "name": {
          "description": "Name given by the bank or the PSU in OnlineBanking.",
          "type": "string",
          "maxLength": 35
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.",
          "type": "string",
          "maxLength": 35
        },
        "product": {
          "description": "Product Name of the Bank for this account, proprietary definition",
          "type": "string",
          "maxLength": 35
        },
        "resourceid": {
          "description": "This is the data element to be used in the path when retrieving data from a dedicated account.",
          "type": "string",
          "maxLength": 35
        },
        "usage": {
          "description": "Specifies the usage of the account - PRIV: private personal account - ORGA: professional account",
          "type": "string",
          "maxLength": 140,
          "example": "PRIV"
        }
      }
    },
    "AccountReference": {
      "type": "object",
      "title": "AccountReference",
      "properties": {
        "bban": {
          "description": "This data element can be used in the body of the Consent Request Message for retrieving account access consent from this account. This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "currency": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        },
        "iban": {
          "description": "This data element can be used in the body of the Consent Request Message for retrieving account access consent from this payment account.",
          "type": "string",
          "pattern": "^[A-Z]{2}[0-9]{2}[A-Z0-9]{1-30}$"
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.",
          "type": "string",
          "maxLength": 35
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number. This alias might be needed e.g. in the payment initiation service. The support of this alias must be explicitly documented by the ASPSP for the corresponding API Calls.",
          "type": "string",
          "maxLength": 35
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.",
          "type": "string",
          "maxLength": 35
        }
      }
    },
    "AccountReport": {
      "type": "object",
      "title": "AccountReport",
      "required": [
        "booked",
        "_links"
      ],
      "properties": {
        "_links": {
          "description": "The following links might be used within this context, account link (mandatory), first_page_link (optional), second_page_link (optional), current_page_ link (optional), last_page_link (optional)",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "booked": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        },
        "pending": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      }
    },
    "AccountsBalancesResponse": {
      "type": "object",
      "title": "Accounts Balances Response",
      "required": [
        "balances"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/AccountReference"
        },
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Balance"
          }
        }
      }
    },
    "AccountsResponse": {
      "type": "object",
      "title": "Accounts Response",
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDetails"
          }
        }
      }
    },
    "AccountsResponse18": {
      "type": "object",
      "title": "Accounts Response18",
      "required": [
        "account"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/AccountDetails"
        }
      }
    },
    "AccountsTransactionsResponse": {
      "type": "object",
      "title": "Accounts Transactions Response",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "account": {
          "$ref": "#/definitions/AccountReference"
        },
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Balance"
          }
        },
        "transactions": {
          "$ref": "#/definitions/AccountReport"
        }
      }
    },
    "AccountsTransactionsResponse81": {
      "type": "object",
      "title": "Accounts Transactions Response81",
      "properties": {
        "transactionsDetails": {
          "$ref": "#/definitions/Transaction"
        }
      }
    },
    "Address": {
      "type": "object",
      "title": "Address",
      "required": [
        "country"
      ],
      "properties": {
        "buildingNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "street": {
          "type": "string",
          "maxLength": 70
        }
      }
    },
    "Amount": {
      "type": "object",
      "title": "Amount",
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. The decimal separator is a dot.",
          "type": "string",
          "example": "123.42"
        },
        "currency": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        }
      }
    },
    "Authentication": {
      "type": "object",
      "title": "Authentication",
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ],
      "properties": {
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string",
          "maxLength": 35
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "explanation": {
          "description": "detailed information about the sca method for the PSU.",
          "type": "string"
        },
        "name": {
          "description": "This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP. Alternatively this could be a description provided by the ASPSP like “SMS OTP on phone +49160 xxxxx 28”. This name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        }
      }
    },
    "AuthenticationType": {
      "type": "string",
      "title": "AuthenticationType",
      "enum": [
        "SMS_OTP",
        "CHIP_OTP",
        "PHOTO_OTP",
        "PUSH_OTP"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "SMS_OTP"
        },
        {
          "description": "",
          "name": "CHIP_OTP"
        },
        {
          "description": "",
          "name": "PHOTO_OTP"
        },
        {
          "description": "",
          "name": "PUSH_OTP"
        }
      ],
      "example": "SMS_OTP"
    },
    "AvailableAccounts": {
      "type": "string",
      "title": "AvailableAccounts",
      "enum": [
        "allAccounts",
        "allAccountsWithBalances"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "allAccounts"
        },
        {
          "description": "",
          "name": "allAccountsWithBalances"
        }
      ],
      "example": "allAccounts"
    },
    "Balance": {
      "type": "object",
      "title": "Balance",
      "required": [
        "balanceAmount",
        "balanceType"
      ],
      "properties": {
        "balanceAmount": {
          "$ref": "#/definitions/Amount"
        },
        "balanceType": {
          "$ref": "#/definitions/BalanceType"
        },
        "lastChangeDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastCommittedTransaction": {
          "type": "string",
          "maxLength": 35
        },
        "referenceDate": {
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        }
      }
    },
    "BalanceType": {
      "type": "string",
      "title": "BalanceType",
      "enum": [
        "closingBooked",
        "expected",
        "authorised",
        "openingBooked",
        "interimAvailable",
        "forwardAvailable"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "closingBooked"
        },
        {
          "description": "",
          "name": "expected"
        },
        {
          "description": "",
          "name": "authorised"
        },
        {
          "description": "",
          "name": "openingBooked"
        },
        {
          "description": "",
          "name": "interimAvailable"
        },
        {
          "description": "",
          "name": "forwardAvailable"
        }
      ],
      "example": "closingBooked"
    },
    "BulkPaymentsResponse": {
      "type": "object",
      "title": "Bulk Payments Response",
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "paymentId": {
          "description": "resource identification of the generated payment initiation resource.",
          "type": "string"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "tppMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TppMessage261"
          }
        },
        "transactionFeeIndicator": {
          "type": "boolean"
        },
        "transactionFees": {
          "$ref": "#/definitions/Amount"
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "Category": {
      "type": "string",
      "title": "Category",
      "enum": [
        "WARNING",
        "ERROR"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "WARNING"
        },
        {
          "description": "",
          "name": "ERROR"
        }
      ],
      "example": "WARNING"
    },
    "Challenge": {
      "type": "object",
      "title": "Challenge",
      "properties": {
        "additionalInformation": {
          "description": "Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen sca method",
          "type": "string"
        },
        "data": {
          "description": "String challenge data",
          "type": "string"
        },
        "image": {
          "description": "PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method.",
          "type": "string"
        },
        "imageLink": {
          "description": "A link where the ASPSP will provides the challenge image for the TPP.",
          "type": "string"
        },
        "otpFormat": {
          "$ref": "#/definitions/OtpFormat"
        },
        "otpMaxLength": {
          "description": "The maximal length for the OTP to be typed in by the PSU.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConsentStatus": {
      "type": "string",
      "title": "ConsentStatus",
      "enum": [
        "received",
        "rejected",
        "valid",
        "revokedByPsu",
        "expired",
        "terminatedByTpp"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "received"
        },
        {
          "description": "",
          "name": "rejected"
        },
        {
          "description": "",
          "name": "valid"
        },
        {
          "description": "",
          "name": "revokedByPsu"
        },
        {
          "description": "",
          "name": "expired"
        },
        {
          "description": "",
          "name": "terminatedByTpp"
        }
      ],
      "example": "received"
    },
    "ConsentsRequest": {
      "type": "object",
      "title": "consentsRequest",
      "required": [
        "access",
        "recurringIndicator",
        "validUntil",
        "frequencyPerDay",
        "combinedServiceIndicator"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/AccountAccess"
        },
        "combinedServiceIndicator": {
          "description": "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\", cp. Section 8.",
          "type": "boolean"
        },
        "frequencyPerDay": {
          "description": "This field indicates the requested maximum frequency for an access per day. For a one-off access, this attribute is set to \"1\".",
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "recurringIndicator": {
          "description": "\"true\" if the consent is for recurring access to the account data \"false\", if the consent is for one access to the account data",
          "type": "boolean"
        },
        "validUntil": {
          "description": "This parameter is requesting a valid until date for the requested consent. The content is the local ASPSP date in ISODate Format, e.g. 2017-10-30. If a maximal available date is requested, a date in far future is to be used: \"9999-12-31\". The consent object to be retrieved by the GET Consent Request will contain the adjusted date.",
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        }
      }
    },
    "ConsentsRequest144": {
      "type": "object",
      "title": "Consents Request144",
      "properties": {
        "authenticationMethodId": {
          "type": "string"
        },
        "psuData": {
          "$ref": "#/definitions/PSUData"
        },
        "scaAuthenticationData": {
          "type": "string"
        }
      }
    },
    "ConsentsResponse": {
      "type": "object",
      "title": "Consents Response",
      "required": [
        "consentStatus",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenSca Method": {
          "$ref": "#/definitions/Authentication"
        },
        "consentId": {
          "description": "Identification of the consent resource as it is used in the API structure. Shall be contained, if a consent resource was generated.",
          "type": "string",
          "example": "qwer3456tzui7890"
        },
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        }
      }
    },
    "ConsentsResponse125": {
      "type": "object",
      "title": "Consents Response125",
      "required": [
        "access",
        "recurringIndicator",
        "validUntil",
        "frequencyPerDay",
        "lastActionDate",
        "consentStatus"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/AccountAccess"
        },
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "frequencyPerDay": {
          "type": "integer",
          "format": "int32"
        },
        "lastActionDate": {
          "type": "string",
          "format": "date"
        },
        "recurringIndicator": {
          "description": "\"true\" if the consent is for recurring access to the account data \"false\", if the consent is for one access to the account data",
          "type": "boolean"
        },
        "scaStatus": {
          "description": "This data element is containing information about the status of the SCA method applied. This is free text but might be coded in a future version of the specification.",
          "type": "string"
        },
        "validUntil": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ConsentsResponse146": {
      "type": "object",
      "title": "Consents Response146",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "ConsentsStatusResponse": {
      "type": "object",
      "title": "Consents Status Response",
      "required": [
        "consentStatus"
      ],
      "properties": {
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "scaStatus": {
          "description": "This data element is containing information about the status of the SCA method applied. This is free text but might be coded in a future version of the specification.",
          "type": "string"
        }
      }
    },
    "ContentType": {
      "type": "string",
      "title": "Content-Type",
      "enum": [
        "application/json",
        "application/xml",
        "application/text"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "Enum_applicationjson"
        },
        {
          "description": "",
          "name": "Enum_applicationxml"
        },
        {
          "description": "",
          "name": "Enum_applicationtext"
        }
      ],
      "example": "application/json"
    },
    "ExchangeRate": {
      "type": "object",
      "title": "ExchangeRate",
      "required": [
        "currencyFrom",
        "rateFrom",
        "currencyTo",
        "rateTo",
        "rateDate"
      ],
      "properties": {
        "currencyFrom": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        },
        "currencyTo": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        },
        "rateContract": {
          "type": "string"
        },
        "rateDate": {
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        },
        "rateFrom": {
          "type": "string"
        },
        "rateTo": {
          "type": "string"
        }
      }
    },
    "Frequency": {
      "type": "string",
      "title": "frequency",
      "enum": [
        "Daily",
        "Weekly",
        "EveryTwoWeeks",
        "Monthly",
        "EveryTwoMonths",
        "Quarterly",
        "SemiAnnual",
        "Annual"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "Daily"
        },
        {
          "description": "",
          "name": "Weekly"
        },
        {
          "description": "",
          "name": "EveryTwoWeeks"
        },
        {
          "description": "",
          "name": "Monthly"
        },
        {
          "description": "",
          "name": "EveryTwoMonths"
        },
        {
          "description": "",
          "name": "Quarterly"
        },
        {
          "description": "",
          "name": "SemiAnnual"
        },
        {
          "description": "",
          "name": "Annual"
        }
      ],
      "example": "Daily"
    },
    "FundsConfirmationsRequest": {
      "type": "object",
      "title": "Funds Confirmations Request",
      "required": [
        "account",
        "instructedAmount"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/AccountReference"
        },
        "cardNumber": {
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/Amount"
        },
        "payee": {
          "type": "string",
          "maxLength": 70
        }
      }
    },
    "FundsConfirmationsResponse": {
      "type": "object",
      "title": "Funds Confirmations Response",
      "required": [
        "fundsAvaiable"
      ],
      "properties": {
        "fundsAvaiable": {
          "description": "Equals “true” if sufficient funds are available at the time of the request, “false” otherwise.",
          "type": "boolean"
        }
      }
    },
    "Links": {
      "type": "object",
      "title": "Links",
      "properties": {
        "account": {
          "description": "A link to the resource providing the details of one account",
          "type": "string"
        },
        "authoriseTransaction": {
          "description": "The link to the payment initiation or consent resource, where the “Transaction Authorization”Request“ is sent to. This is the link to the resource which will authorize the payment or the consent by checking the SCA authentication data within the Embedded SCA approach.",
          "type": "string"
        },
        "balances": {
          "description": "A link to the resource providing the balance of a dedicated account.",
          "type": "string"
        },
        "download": {
          "description": "Download link for huge AIS data packages.",
          "type": "string"
        },
        "first": {
          "description": "Navigation link for paginated account reports.",
          "type": "string"
        },
        "last": {
          "description": "Navigation link for paginated account reports.",
          "type": "string"
        },
        "next": {
          "description": "Navigation link for paginated account reports.",
          "type": "string"
        },
        "previous": {
          "description": "Navigation link for paginated account reports.",
          "type": "string"
        },
        "scaOAuth": {
          "description": "The link refers to a JSON document specifying the OAuth details of the ASPSP’s authorisation server. JSON document follows the definition given in https://tools.ietf.org/html/draft-ietf-oauth- discovery.",
          "type": "string"
        },
        "scaRedirect": {
          "description": "A link to an ASPSP site where SCA is performed within the Redirect SCA approach.",
          "type": "string"
        },
        "selectAuthenticationMethod": {
          "description": "This is a link to a resource, where the TPP can select the applicable second factor authentication methods for the PSU, if there were several available authentication methods.",
          "type": "string"
        },
        "self": {
          "description": "The link to the payment initiation resource created by the request itself. This link can be used later to retrieve the transaction status of the payment initiation.",
          "type": "string"
        },
        "status": {
          "description": "Status of the resource.",
          "type": "string"
        },
        "transactions": {
          "description": "A link to the resource providing the transaction history of a dediated amount.",
          "type": "string"
        },
        "transactionsDetails": {
          "description": "A link to the resource providing details of a dedicated transaction.",
          "type": "string"
        },
        "updateProprietaryData": {
          "description": "The link to the payment initiation or account information resource, which needs to be updated by the proprietary data.",
          "type": "string"
        },
        "updatePsuAuthentication": {
          "description": "The link to the payment initiation or account information resource, which needs to be updated by a psu password and eventually the psu identification if not delivered yet.",
          "type": "string"
        },
        "updatePsuIdentification": {
          "description": "The link to the payment initiation or account information resource, which needs to be updated by the psu identification if not delivered yet.",
          "type": "string"
        }
      }
    },
    "MessageCode": {
      "type": "string",
      "title": "MessageCode",
      "enum": [
        "CERTIFICATE_INVALID",
        "CERTIFICATE_EXPIRED",
        "CERTIFICATE_BLOCKED",
        "CERTIFICATE_REVOKED",
        "CERTIFICATE_MISSING",
        "SIGNATURE_INVALID",
        "SIGNATURE_MISSING",
        "FORMAT_ERROR",
        "PARAMETER_NOT_SUPPORTED",
        "PSU_CREDENTIALS_INVALID",
        "SERVICE_INVALID",
        "SERVICE_BLOCKED",
        "CORPORATE_ID_INVALID",
        "CONSENT_UNKNOWN",
        "CONSENT_INVALID",
        "CONSENT_EXPIRED",
        "TOKEN_UNKNOWN",
        "TOKEN_INVALID",
        "TOKEN_EXPIRED",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED",
        "TIMESTAMP_INVALID",
        "PERIOD_INVALID",
        "SCA_METHOD_UNKNOWN",
        "PRODUCT_INVALID",
        "PRODUCT_UNKNOWN",
        "PAYMENT_FAILED",
        "REQUIRED_KID_MISSING",
        "EXECUTION_DATE_INVALID",
        "SESSIONS_NOT_SUPPORTED",
        "ACCESS_EXCEEDED",
        "REQUESTED_FORMATS_INVALID",
        "CARD_INVALID",
        "NO_PIIS_ACTIVATION"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "CERTIFICATE_INVALID"
        },
        {
          "description": "",
          "name": "CERTIFICATE_EXPIRED"
        },
        {
          "description": "",
          "name": "CERTIFICATE_BLOCKED"
        },
        {
          "description": "",
          "name": "CERTIFICATE_REVOKED"
        },
        {
          "description": "",
          "name": "CERTIFICATE_MISSING"
        },
        {
          "description": "",
          "name": "SIGNATURE_INVALID"
        },
        {
          "description": "",
          "name": "SIGNATURE_MISSING"
        },
        {
          "description": "",
          "name": "FORMAT_ERROR"
        },
        {
          "description": "",
          "name": "PARAMETER_NOT_SUPPORTED"
        },
        {
          "description": "",
          "name": "PSU_CREDENTIALS_INVALID"
        },
        {
          "description": "",
          "name": "SERVICE_INVALID"
        },
        {
          "description": "",
          "name": "SERVICE_BLOCKED"
        },
        {
          "description": "",
          "name": "CORPORATE_ID_INVALID"
        },
        {
          "description": "",
          "name": "CONSENT_UNKNOWN"
        },
        {
          "description": "",
          "name": "CONSENT_INVALID"
        },
        {
          "description": "",
          "name": "CONSENT_EXPIRED"
        },
        {
          "description": "",
          "name": "TOKEN_UNKNOWN"
        },
        {
          "description": "",
          "name": "TOKEN_INVALID"
        },
        {
          "description": "",
          "name": "TOKEN_EXPIRED"
        },
        {
          "description": "",
          "name": "RESOURCE_UNKNOWN"
        },
        {
          "description": "",
          "name": "RESOURCE_EXPIRED"
        },
        {
          "description": "",
          "name": "TIMESTAMP_INVALID"
        },
        {
          "description": "",
          "name": "PERIOD_INVALID"
        },
        {
          "description": "",
          "name": "SCA_METHOD_UNKNOWN"
        },
        {
          "description": "",
          "name": "PRODUCT_INVALID"
        },
        {
          "description": "",
          "name": "PRODUCT_UNKNOWN"
        },
        {
          "description": "",
          "name": "PAYMENT_FAILED"
        },
        {
          "description": "",
          "name": "REQUIRED_KID_MISSING"
        },
        {
          "description": "",
          "name": "EXECUTION_DATE_INVALID"
        },
        {
          "description": "",
          "name": "SESSIONS_NOT_SUPPORTED"
        },
        {
          "description": "",
          "name": "ACCESS_EXCEEDED"
        },
        {
          "description": "",
          "name": "REQUESTED_FORMATS_INVALID"
        },
        {
          "description": "",
          "name": "CARD_INVALID"
        },
        {
          "description": "",
          "name": "NO_PIIS_ACTIVATION"
        }
      ],
      "example": "CERTIFICATE_INVALID"
    },
    "OtpFormat": {
      "type": "string",
      "title": "OtpFormat",
      "enum": [
        "characters",
        "integer"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "characters"
        },
        {
          "description": "",
          "name": "integer"
        }
      ],
      "example": "characters"
    },
    "PSUData": {
      "type": "object",
      "title": "PSUData",
      "properties": {
        "password": {
          "type": "string",
          "example": "very42secret%"
        }
      }
    },
    "PaymentProduct": {
      "type": "string",
      "title": "payment-product",
      "enum": [
        "sepa-credit-transfers",
        "instant-sepa-credit-transfers",
        "target-2-payments",
        "cross-border-credit-transfers"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "sepacredittransfers"
        },
        {
          "description": "",
          "name": "instantsepacredittransfers"
        },
        {
          "description": "",
          "name": "target2payments"
        },
        {
          "description": "",
          "name": "crossbordercredittransfers"
        }
      ],
      "example": "sepa-credit-transfers"
    },
    "PaymentService": {
      "type": "string",
      "title": "payment-service",
      "enum": [
        "payments",
        "bulk-payments",
        "periodic-payments"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "payments"
        },
        {
          "description": "",
          "name": "bulkpayments"
        },
        {
          "description": "",
          "name": "periodicpayments"
        }
      ],
      "example": "payments"
    },
    "PaymentidRequest": {
      "type": "object",
      "title": "PaymentId Request",
      "properties": {
        "authenticationMethodId": {
          "type": "string"
        },
        "psuData": {
          "$ref": "#/definitions/PSUData"
        },
        "scaAuthenticationData": {
          "type": "string"
        }
      }
    },
    "PaymentidResponse": {
      "type": "object",
      "title": "PaymentId Response",
      "required": [
        "transactionStatus"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "PaymentidStatusResponse": {
      "type": "object",
      "title": "PaymentId Status Response",
      "properties": {
        "scaStatus": {
          "description": "This data element is containing information about the status of the SCA method applied. This is free text but might be coded in a future version of the specification.",
          "type": "string"
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "PaymentsResponse": {
      "type": "object",
      "title": "Payments Response",
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "paymentId": {
          "description": "resource identification of the generated payment initiation resource.",
          "type": "string"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "tppMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TppMessage261"
          }
        },
        "transactionFeeIndicator": {
          "type": "boolean"
        },
        "transactionFees": {
          "$ref": "#/definitions/Amount"
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "PeriodicPaymentsRequest": {
      "type": "object",
      "title": "Periodic Payments Request",
      "properties": {
        "dayOfExecution": {
          "type": "integer",
          "format": "int32",
          "maximum": 31,
          "minimum": 1
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "executionRule": {
          "type": "string"
        },
        "frequency": {
          "$ref": "#/definitions/Frequency"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "PeriodicPaymentsResponse": {
      "type": "object",
      "title": "Periodic Payments Response",
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "paymentId": {
          "description": "resource identification of the generated payment initiation resource.",
          "type": "string"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "tppMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TppMessage261"
          }
        },
        "transactionFeeIndicator": {
          "type": "boolean"
        },
        "transactionFees": {
          "$ref": "#/definitions/Amount"
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "Protocol": {
      "type": "string",
      "title": "protocol",
      "enum": [
        "http",
        "https"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "http"
        },
        {
          "description": "",
          "name": "https"
        }
      ],
      "example": "http"
    },
    "Remittance": {
      "type": "object",
      "title": "Remittance",
      "required": [
        "reference"
      ],
      "properties": {
        "reference": {
          "type": "string",
          "maxLength": 35
        },
        "referenceIssuer": {
          "type": "string",
          "maxLength": 35
        },
        "referenceType": {
          "type": "string",
          "maxLength": 35
        }
      }
    },
    "TppMessage": {
      "type": "object",
      "title": "TppMessage",
      "required": [
        "category",
        "code",
        "text"
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "code": {
          "$ref": "#/definitions/MessageCode"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "maxLength": 512,
          "example": "additional text information of the ASPSP up to 512 characters"
        }
      }
    },
    "TppMessage261": {
      "type": "object",
      "title": "TppMessage261",
      "required": [
        "category",
        "code",
        "text"
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "code": {
          "$ref": "#/definitions/MessageCode"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "maxLength": 512,
          "example": "additional text information of the ASPSP up to 512 characters"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "title": "Transaction",
      "required": [
        "transactionAmount"
      ],
      "properties": {
        "_links": {
          "description": "The following links could be used here: transactionDetails for retrieving details of a transaction.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "bankTransactionCode": {
          "description": "Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO20022",
          "type": "string"
        },
        "bookingDate": {
          "description": "The Date when an entry is posted to an account on the ASPSPs books.",
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        },
        "creditorAccount": {
          "$ref": "#/definitions/AccountReference"
        },
        "creditorId": {
          "description": "Identification of Creditors, e.g. a SEPA Creditor ID",
          "type": "string",
          "maxLength": 35
        },
        "creditorName": {
          "description": "Identification of Creditors, e.g. a SEPA Creditor ID",
          "type": "string",
          "maxLength": 70
        },
        "debtorAccount": {
          "$ref": "#/definitions/AccountReference"
        },
        "debtorName": {
          "description": "Name of the debtor if a \"Credited\" transaction",
          "type": "string",
          "maxLength": 70
        },
        "endToEndId": {
          "description": "Unique end to end identity.",
          "type": "string",
          "maxLength": 35
        },
        "entryReference": {
          "description": "Is the identification of the transaction as used e.g. for reference for deltafunction on application level. The same identification as for example used within camt.05x messages",
          "type": "string",
          "maxLength": 35
        },
        "exchangeRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRate"
          }
        },
        "mandateId": {
          "description": "Identification of a Cheque.",
          "type": "string",
          "maxLength": 35,
          "example": "Mandate-2018-04-20-1234"
        },
        "proprietaryBankTransactionCode": {
          "description": "proprietary bank transaction code as used within a community or within an ASPSP e.g. for MT94x based transaction reports",
          "type": "string",
          "maxLength": 35,
          "example": "PMNT-RCVD-ESDD"
        },
        "puposeCode": {
          "type": "string"
        },
        "remittanceInformationStructured": {
          "description": "Reference to be transported in the field.",
          "type": "string",
          "maxLength": 140
        },
        "transactionAmount": {
          "$ref": "#/definitions/Amount"
        },
        "transactionId": {
          "description": "Can be used as access-id in the API, where more details on an transaction is offered.",
          "type": "string"
        },
        "ultimateCreditor": {
          "type": "string",
          "maxLength": 70
        },
        "ultimateDebtor": {
          "type": "string",
          "maxLength": 70
        },
        "valueDate": {
          "description": "The Date at which assets become available to the account owner in case of a credit",
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        }
      }
    },
    "TransactionStatus": {
      "type": "string",
      "title": "TransactionStatus",
      "enum": [
        "ACCP",
        "ACSC",
        "ACSP",
        "ACTC",
        "ACWC",
        "ACWP",
        "RCVD",
        "PDNG",
        "RJCT"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "ACCP"
        },
        {
          "description": "",
          "name": "ACSC"
        },
        {
          "description": "",
          "name": "ACSP"
        },
        {
          "description": "",
          "name": "ACTC"
        },
        {
          "description": "",
          "name": "ACWC"
        },
        {
          "description": "",
          "name": "ACWP"
        },
        {
          "description": "",
          "name": "RCVD"
        },
        {
          "description": "",
          "name": "PDNG"
        },
        {
          "description": "",
          "name": "RJCT"
        }
      ],
      "example": "ACCP"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "PSD2 API based on the Berlin Group specs\n",
    "title": "OpenPSD PSD2",
    "version": "0.0.1"
  },
  "host": "api.openpsd.org",
  "basePath": "/psd2/v1",
  "paths": {
    "/accounts": {
      "get": {
        "description": "Reads a list of bank accounts, with balances where required. It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. The addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, respectively the OAuth2 access token.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "list of accounts",
        "operationId": "AccountsGet",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, if granted by the PSU in the related consent and available by the ASPSP. This parameter might be ignored by the ASPSP.",
            "name": "withBalance",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/accounts/{account-id}": {
      "get": {
        "description": "Reads a list of bank accounts, with balances where required. It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. The addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, respectively the OAuth2 access token.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "account details",
        "operationId": "AccountsByAccountIdGet",
        "parameters": [
          {
            "type": "string",
            "description": "This identification is denoting the addressed account. The account-id is retrieved by using a \"Read Account List\" call. The account-id is the \"resourceId\" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.",
            "name": "account-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, if granted by the PSU in the related consent and available by the ASPSP. This parameter might be ignored by the ASPSP.",
            "name": "withBalance",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsResponse18"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/accounts/{account-id}/balances": {
      "get": {
        "description": "Reads the balance list for a given account.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "balances for account",
        "operationId": "AccountsBalancesByAccountIdGet",
        "parameters": [
          {
            "type": "string",
            "description": "This identification is denoting the addressed account. The account-id is retrieved by using a \"Read Account List\" call. The account-id is the \"resourceId\" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.",
            "name": "account-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsBalancesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/accounts/{account-id}/transactions": {
      "get": {
        "description": "Reads a transaction list For a given account, additional parameters are e.g. the attributes “date_from” and “date_to”. If the attribute “withbalance” is used, the ASPSP will add balances to the transaction list. The latter might be provided by the ASPSP anyhow, if transaction lists without balances are not supported.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "transactions for account",
        "operationId": "AccountsTransactionsByAccountIdGet",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "This identification is denoting the addressed account. The account-id is retrieved by using a \"Read Account List\" call. The account-id is the \"resourceId\" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.",
            "name": "account-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Permitted codes are \"booked\", \"pending\" and \"both \"booked\" shall be supported by the ASPSP. To support the \"pending\" and \"both\" feature is optional for the ASPSP, Error code if not supported in the online banking frontend",
            "name": "bookingStatus",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "type": "string",
            "format": "date",
            "description": "Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required",
            "name": "dateFrom",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "End date (inclusive the data dateTo) of the transaction list, default is now if not given.",
            "name": "dateTo",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the transaction with identification entryReferenceFrom alternatively to the above defined period. This is a implementation of a delta access. If this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the ASPSP if a delta report is supported.",
            "name": "entryReferenceFrom",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report. This delta indicator might be rejected by the ASPSP if this function is not supported.",
            "name": "deltaList",
            "in": "query"
          },
          {
            "enum": [
              "xml",
              "JSON",
              "text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "xml"
              },
              {
                "description": "",
                "name": "JSON"
              },
              {
                "description": "",
                "name": "text"
              }
            ],
            "description": "The TPP can indicate the formats of account reports supported together with a priorisation following the HTTP header definition.",
            "name": "Accept",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsTransactionsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/accounts/{account-id}/transactions/{resourceId}": {
      "get": {
        "security": [],
        "description": "Reads transaction details of an addressed transaction.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "account"
        ],
        "summary": "transaction details for transaction of an account",
        "operationId": "AccountsTransactionsByAccountIdAndResourceIdGet",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "maxLength": 35,
            "type": "string",
            "description": "This identification is given by the attribute resourceId of the corresponding entry of a transaction list.",
            "name": "resourceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "This identification is denoting the addressed account. The account-id is retrieved by using a \"Read Account List\" call. The account-id is the \"resourceId\" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.",
            "name": "account-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountsTransactionsResponse81"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/bulk-payments/{payment-product}": {
      "post": {
        "description": "Creates a payment initiation resource addressable under {paymentId} with all data relevant for the corresponding payment product. This is the first step in the API to initiate the related payment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "create a bulk payment",
        "operationId": "BulkPaymentsByPaymentProductPost",
        "parameters": [
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "application/json",
              "application/xml",
              "application/text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "Enum_applicationjson"
              },
              {
                "description": "",
                "name": "Enum_applicationxml"
              },
              {
                "description": "",
                "name": "Enum_applicationtext"
              }
            ],
            "description": "Content-Type",
            "name": "Content-Type",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP.",
            "name": "PSU-IP-Address",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BulkPaymentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/consents": {
      "post": {
        "description": "Creates a consent resource, defining access rights to dedicated accounts of a given PSU-ID. These accounts must be addressed explicitly in the method as parameters.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "create a consent",
        "operationId": "ConsentsPost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConsentsRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Consent Request was correctly performed.",
            "schema": {
              "$ref": "#/definitions/ConsentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/consents/{consentId}": {
      "get": {
        "description": "Reads the exact definition of the given consent resource {consentId}",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "get consent details",
        "operationId": "ConsentsByConsentIdGet",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request",
            "name": "consentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConsentsResponse125"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      },
      "put": {
        "description": "Updates data on the consent resource, authorises a consent within the Embedded SCA Approach where needed.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "update consent",
        "operationId": "ConsentsByConsentIdPut",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request",
            "name": "consentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConsentsRequest144"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConsentsResponse146"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      },
      "delete": {
        "description": "Deletes a created consent with ID.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "delete consent",
        "operationId": "ConsentsByConsentIdDelete",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request",
            "name": "consentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          }
        ],
        "responses": {
          "204": {
            "description": "Consent resource was successfully deleted."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/consents/{consentId}/status": {
      "get": {
        "description": "Reads the transaction status of the addressed consent resource.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Consent"
        ],
        "summary": "get status of a consent",
        "operationId": "ConsentsStatusByConsentIdGet",
        "parameters": [
          {
            "type": "string",
            "description": "ID of the corresponding consent object as returned by an Account Information Consent Request",
            "name": "consentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction status",
            "schema": {
              "$ref": "#/definitions/ConsentsStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/funds-confirmations": {
      "post": {
        "description": "Checks whether funds are available for a payment transaction on an account linked with a given tuple cardissuer/cardnumber, or an IBAN and TPP respectively",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Funds"
        ],
        "summary": "check funds",
        "operationId": "FundsConfirmationsPost",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FundsConfirmationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FundsConfirmationsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/payments/{payment-product}": {
      "post": {
        "description": "Creates a payment initiation resource addressable under {paymentId} with all data relevant for the corresponding payment product. This is the first step in the API to initiate the related payment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "create a single payment",
        "operationId": "PaymentsByPaymentProductPost",
        "parameters": [
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "application/json",
              "application/xml",
              "application/text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "Enum_applicationjson"
              },
              {
                "description": "",
                "name": "Enum_applicationxml"
              },
              {
                "description": "",
                "name": "Enum_applicationtext"
              }
            ],
            "description": "Content-Type",
            "name": "Content-Type",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP.",
            "name": "PSU-IP-Address",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/periodic-payments/{payment-product}": {
      "post": {
        "description": "Creates a payment initiation resource addressable under {paymentID} with all data relevant for the corresponding payment product. This is the first step in the API to initiate the related payment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "create a periodic payment",
        "operationId": "PeriodicPaymentsByPaymentProductPost",
        "parameters": [
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "application/json",
              "application/xml",
              "application/text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "Enum_applicationjson"
              },
              {
                "description": "",
                "name": "Enum_applicationxml"
              },
              {
                "description": "",
                "name": "Enum_applicationtext"
              }
            ],
            "description": "Content-Type",
            "name": "Content-Type",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP.",
            "name": "PSU-IP-Address",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeriodicPaymentsRequest"
            }
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PeriodicPaymentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/{payment-service}/{payment-product}/{paymentId}": {
      "get": {
        "description": "Reads the details of an initiated payment.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "get payment details",
        "operationId": "PaymentIdByPaymentServiceAndPaymentProductGet",
        "parameters": [
          {
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "payments"
              },
              {
                "description": "",
                "name": "bulkpayments"
              },
              {
                "description": "",
                "name": "periodicpayments"
              }
            ],
            "description": "The payment service to use.",
            "name": "payment-service",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "payment Id",
            "name": "paymentId",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "application/json",
              "application/xml",
              "application/text"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "Enum_applicationjson"
              },
              {
                "description": "",
                "name": "Enum_applicationxml"
              },
              {
                "description": "",
                "name": "Enum_applicationtext"
              }
            ],
            "description": "Content-Type",
            "name": "Content-Type",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Shall be contained since \"Establish Consent Transaction\" was performed via this API before.",
            "name": "Consent-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP.",
            "name": "PSU-IP-Address",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "boolean",
            "description": "If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.",
            "name": "TPP-Redirect-Preferred",
            "in": "header"
          },
          {
            "type": "string",
            "description": "URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.",
            "name": "TPP-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "name": "TPP-Nok-Redirect-URI",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      },
      "put": {
        "description": "Updates data on the payment resource if needed. It may authorise a payment within the Embedded SCA Approach where needed.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "update payment",
        "operationId": "PaymentIdByPaymentServiceAndPaymentProductPut",
        "parameters": [
          {
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "payments"
              },
              {
                "description": "",
                "name": "bulkpayments"
              },
              {
                "description": "",
                "name": "periodicpayments"
              }
            ],
            "description": "The payment service to use.",
            "name": "payment-service",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "payment Id",
            "name": "paymentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.",
            "name": "PSU-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.",
            "name": "PSU-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSP's documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Might be mandated in the ASPSPs documentation. Only used in a corporate context.",
            "name": "PSU-Corporate-ID-Type",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PaymentidRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK result with Decoupled Approach",
            "schema": {
              "$ref": "#/definitions/PaymentidResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    },
    "/{payment-service}/{payment-product}/{paymentId}/status": {
      "get": {
        "description": "Reads the transaction status of the payment",
        "produces": [
          "application/json"
        ],
        "tags": [
          "payments"
        ],
        "summary": "get the status of a payment",
        "operationId": "PaymentIdStatusByPaymentServiceAndPaymentProductGet",
        "parameters": [
          {
            "enum": [
              "payments",
              "bulk-payments",
              "periodic-payments"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "payments"
              },
              {
                "description": "",
                "name": "bulkpayments"
              },
              {
                "description": "",
                "name": "periodicpayments"
              }
            ],
            "description": "The payment service to use.",
            "name": "payment-service",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "sepa-credit-transfers",
              "instant-sepa-credit-transfers",
              "target-2-payments",
              "cross-border-credit-transfers"
            ],
            "type": "string",
            "x-enum-elements": [
              {
                "description": "",
                "name": "sepacredittransfers"
              },
              {
                "description": "",
                "name": "instantsepacredittransfers"
              },
              {
                "description": "",
                "name": "target2payments"
              },
              {
                "description": "",
                "name": "crossbordercredittransfers"
              }
            ],
            "description": "The addressed payment product, e.g. SCT. The default list of products supported in this standard is, pain.001-sepa-credit-transfers, pain.001-instant-sepa-credit-transfers, pain.001-target-2-payments or pain.001-cross-border-credit-transfers. Further products might be published by the ASPSP within its XS2A documentation.",
            "name": "payment-product",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "payment Id",
            "name": "paymentId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "ID of the request, unique to the call, as determined by the initiating party.",
            "name": "X-Request-ID",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.",
            "name": "Authorization",
            "in": "header"
          },
          {
            "type": "string",
            "description": "Is contained if and only if the \"Signature\" element is contained in the header of the request.",
            "name": "Digest",
            "in": "header"
          },
          {
            "type": "string",
            "description": "A signature of the request by the TPP on application level. This might be mandated by ASPSP.",
            "name": "Signature",
            "in": "header"
          },
          {
            "type": "string",
            "description": "The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.",
            "name": "TPP-Signature-Certificate",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaymentidStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          },
          "default": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/TppMessage"
            }
          }
        },
        "x-operation-settings": {
          "AllowDynamicFormParameters": false,
          "AllowDynamicQueryParameters": false,
          "CollectParameters": false,
          "IsMultiContentStreaming": false
        },
        "x-unitTests": []
      }
    }
  },
  "definitions": {
    "Accept": {
      "type": "string",
      "title": "Accept",
      "enum": [
        "xml",
        "JSON",
        "text"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "xml"
        },
        {
          "description": "",
          "name": "JSON"
        },
        {
          "description": "",
          "name": "text"
        }
      ],
      "example": "xml"
    },
    "AccountAccess": {
      "type": "object",
      "title": "AccountAccess",
      "properties": {
        "accounts": {
          "description": "Is asking for detailed account information. If the array is empty, the TPP is asking for an accessible account list. This may be restricted in a PSU/ASPSP authorization dialogue.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountReference"
          }
        },
        "allPsd2": {
          "description": "Optional if supported by API provide. Only the value \"allAccounts\" is admitted.",
          "type": "string",
          "default": "allAccounts",
          "example": "allAccounts"
        },
        "availableAccounts": {
          "$ref": "#/definitions/AvailableAccounts"
        },
        "balances": {
          "description": "Is asking for balances of the addressed accounts. If the array is empty, the TPP is asking for the balances of all accessible account lists. This may be restricted in a PSU/ASPSP authorization dialogue",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountReference"
          }
        },
        "transactions": {
          "description": "Is asking for transactions of the addressed accounts. If the array is empty, the TPP is asking for the transactions of all accessible account lists. This may be restricted in a PSU/ASPSP authorization dialogue",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountReference"
          }
        }
      }
    },
    "AccountDetails": {
      "type": "object",
      "title": "AccountDetails",
      "required": [
        "currency"
      ],
      "properties": {
        "_links": {
          "description": "Links to the account, which can be directly used for retrieving account information from this dedicated account. Links to “balances” and/or “transactions”",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Balance"
          }
        },
        "bban": {
          "description": "This data element can be used in the body of the Consent Request Message for retrieving account access consent from this account. This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "bic": {
          "description": "The BIC associated to the account.",
          "type": "string"
        },
        "cashAccountType": {
          "description": "ExternalCashAccountType1Code from ISO 20022",
          "type": "string"
        },
        "currency": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        },
        "details": {
          "description": "Specifications that might be provided by the ASPSP - characteristics of the account - characteristics of the relevant card",
          "type": "string",
          "maxLength": 140
        },
        "iban": {
          "description": "This data element can be used in the body of the Consent Request Message for retrieving account access consent from this payment account.",
          "type": "string",
          "example": "DE89370400440532013000"
        },
        "linkedAccounts": {
          "description": "Case of a set of pending card transactions, the APSP will provide the relevant cash account the card is set up on.",
          "type": "string",
          "maxLength": 70
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.",
          "type": "string",
          "maxLength": 35
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number. This alias might be needed e.g. in the payment initiation service. The support of this alias must be explicitly documented by the ASPSP for the corresponding API Calls.",
          "type": "string",
          "maxLength": 35
        },
        "name": {
          "description": "Name given by the bank or the PSU in OnlineBanking.",
          "type": "string",
          "maxLength": 35
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.",
          "type": "string",
          "maxLength": 35
        },
        "product": {
          "description": "Product Name of the Bank for this account, proprietary definition",
          "type": "string",
          "maxLength": 35
        },
        "resourceid": {
          "description": "This is the data element to be used in the path when retrieving data from a dedicated account.",
          "type": "string",
          "maxLength": 35
        },
        "usage": {
          "description": "Specifies the usage of the account - PRIV: private personal account - ORGA: professional account",
          "type": "string",
          "maxLength": 140,
          "example": "PRIV"
        }
      }
    },
    "AccountReference": {
      "type": "object",
      "title": "AccountReference",
      "properties": {
        "bban": {
          "description": "This data element can be used in the body of the Consent Request Message for retrieving account access consent from this account. This data elements is used for payment accounts which have no IBAN.",
          "type": "string"
        },
        "currency": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        },
        "iban": {
          "description": "This data element can be used in the body of the Consent Request Message for retrieving account access consent from this payment account.",
          "type": "string",
          "pattern": "^[A-Z]{2}[0-9]{2}[A-Z0-9]{1-30}$"
        },
        "maskedPan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.",
          "type": "string",
          "maxLength": 35
        },
        "msisdn": {
          "description": "An alias to access a payment account via a registered mobile phone number. This alias might be needed e.g. in the payment initiation service. The support of this alias must be explicitly documented by the ASPSP for the corresponding API Calls.",
          "type": "string",
          "maxLength": 35
        },
        "pan": {
          "description": "Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.",
          "type": "string",
          "maxLength": 35
        }
      }
    },
    "AccountReport": {
      "type": "object",
      "title": "AccountReport",
      "required": [
        "booked",
        "_links"
      ],
      "properties": {
        "_links": {
          "description": "The following links might be used within this context, account link (mandatory), first_page_link (optional), second_page_link (optional), current_page_ link (optional), last_page_link (optional)",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "booked": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        },
        "pending": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        }
      }
    },
    "AccountsBalancesResponse": {
      "type": "object",
      "title": "Accounts Balances Response",
      "required": [
        "balances"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/AccountReference"
        },
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Balance"
          }
        }
      }
    },
    "AccountsResponse": {
      "type": "object",
      "title": "Accounts Response",
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDetails"
          }
        }
      }
    },
    "AccountsResponse18": {
      "type": "object",
      "title": "Accounts Response18",
      "required": [
        "account"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/AccountDetails"
        }
      }
    },
    "AccountsTransactionsResponse": {
      "type": "object",
      "title": "Accounts Transactions Response",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "account": {
          "$ref": "#/definitions/AccountReference"
        },
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Balance"
          }
        },
        "transactions": {
          "$ref": "#/definitions/AccountReport"
        }
      }
    },
    "AccountsTransactionsResponse81": {
      "type": "object",
      "title": "Accounts Transactions Response81",
      "properties": {
        "transactionsDetails": {
          "$ref": "#/definitions/Transaction"
        }
      }
    },
    "Address": {
      "type": "object",
      "title": "Address",
      "required": [
        "country"
      ],
      "properties": {
        "buildingNumber": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "street": {
          "type": "string",
          "maxLength": 70
        }
      }
    },
    "Amount": {
      "type": "object",
      "title": "Amount",
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. The decimal separator is a dot.",
          "type": "string",
          "example": "123.42"
        },
        "currency": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        }
      }
    },
    "Authentication": {
      "type": "object",
      "title": "Authentication",
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ],
      "properties": {
        "authenticationMethodId": {
          "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.",
          "type": "string",
          "maxLength": 35
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType"
        },
        "authenticationVersion": {
          "description": "Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.",
          "type": "string"
        },
        "explanation": {
          "description": "detailed information about the sca method for the PSU.",
          "type": "string"
        },
        "name": {
          "description": "This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP. Alternatively this could be a description provided by the ASPSP like “SMS OTP on phone +49160 xxxxx 28”. This name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.",
          "type": "string"
        }
      }
    },
    "AuthenticationType": {
      "type": "string",
      "title": "AuthenticationType",
      "enum": [
        "SMS_OTP",
        "CHIP_OTP",
        "PHOTO_OTP",
        "PUSH_OTP"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "SMS_OTP"
        },
        {
          "description": "",
          "name": "CHIP_OTP"
        },
        {
          "description": "",
          "name": "PHOTO_OTP"
        },
        {
          "description": "",
          "name": "PUSH_OTP"
        }
      ],
      "example": "SMS_OTP"
    },
    "AvailableAccounts": {
      "type": "string",
      "title": "AvailableAccounts",
      "enum": [
        "allAccounts",
        "allAccountsWithBalances"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "allAccounts"
        },
        {
          "description": "",
          "name": "allAccountsWithBalances"
        }
      ],
      "example": "allAccounts"
    },
    "Balance": {
      "type": "object",
      "title": "Balance",
      "required": [
        "balanceAmount",
        "balanceType"
      ],
      "properties": {
        "balanceAmount": {
          "$ref": "#/definitions/Amount"
        },
        "balanceType": {
          "$ref": "#/definitions/BalanceType"
        },
        "lastChangeDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastCommittedTransaction": {
          "type": "string",
          "maxLength": 35
        },
        "referenceDate": {
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        }
      }
    },
    "BalanceType": {
      "type": "string",
      "title": "BalanceType",
      "enum": [
        "closingBooked",
        "expected",
        "authorised",
        "openingBooked",
        "interimAvailable",
        "forwardAvailable"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "closingBooked"
        },
        {
          "description": "",
          "name": "expected"
        },
        {
          "description": "",
          "name": "authorised"
        },
        {
          "description": "",
          "name": "openingBooked"
        },
        {
          "description": "",
          "name": "interimAvailable"
        },
        {
          "description": "",
          "name": "forwardAvailable"
        }
      ],
      "example": "closingBooked"
    },
    "BulkPaymentsResponse": {
      "type": "object",
      "title": "Bulk Payments Response",
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "paymentId": {
          "description": "resource identification of the generated payment initiation resource.",
          "type": "string"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "tppMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TppMessage261"
          }
        },
        "transactionFeeIndicator": {
          "type": "boolean"
        },
        "transactionFees": {
          "$ref": "#/definitions/Amount"
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "Category": {
      "type": "string",
      "title": "Category",
      "enum": [
        "WARNING",
        "ERROR"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "WARNING"
        },
        {
          "description": "",
          "name": "ERROR"
        }
      ],
      "example": "WARNING"
    },
    "Challenge": {
      "type": "object",
      "title": "Challenge",
      "properties": {
        "additionalInformation": {
          "description": "Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen sca method",
          "type": "string"
        },
        "data": {
          "description": "String challenge data",
          "type": "string"
        },
        "image": {
          "description": "PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method.",
          "type": "string"
        },
        "imageLink": {
          "description": "A link where the ASPSP will provides the challenge image for the TPP.",
          "type": "string"
        },
        "otpFormat": {
          "$ref": "#/definitions/OtpFormat"
        },
        "otpMaxLength": {
          "description": "The maximal length for the OTP to be typed in by the PSU.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConsentStatus": {
      "type": "string",
      "title": "ConsentStatus",
      "enum": [
        "received",
        "rejected",
        "valid",
        "revokedByPsu",
        "expired",
        "terminatedByTpp"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "received"
        },
        {
          "description": "",
          "name": "rejected"
        },
        {
          "description": "",
          "name": "valid"
        },
        {
          "description": "",
          "name": "revokedByPsu"
        },
        {
          "description": "",
          "name": "expired"
        },
        {
          "description": "",
          "name": "terminatedByTpp"
        }
      ],
      "example": "received"
    },
    "ConsentsRequest": {
      "type": "object",
      "title": "consentsRequest",
      "required": [
        "access",
        "recurringIndicator",
        "validUntil",
        "frequencyPerDay",
        "combinedServiceIndicator"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/AccountAccess"
        },
        "combinedServiceIndicator": {
          "description": "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\", cp. Section 8.",
          "type": "boolean"
        },
        "frequencyPerDay": {
          "description": "This field indicates the requested maximum frequency for an access per day. For a one-off access, this attribute is set to \"1\".",
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "recurringIndicator": {
          "description": "\"true\" if the consent is for recurring access to the account data \"false\", if the consent is for one access to the account data",
          "type": "boolean"
        },
        "validUntil": {
          "description": "This parameter is requesting a valid until date for the requested consent. The content is the local ASPSP date in ISODate Format, e.g. 2017-10-30. If a maximal available date is requested, a date in far future is to be used: \"9999-12-31\". The consent object to be retrieved by the GET Consent Request will contain the adjusted date.",
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        }
      }
    },
    "ConsentsRequest144": {
      "type": "object",
      "title": "Consents Request144",
      "properties": {
        "authenticationMethodId": {
          "type": "string"
        },
        "psuData": {
          "$ref": "#/definitions/PSUData"
        },
        "scaAuthenticationData": {
          "type": "string"
        }
      }
    },
    "ConsentsResponse": {
      "type": "object",
      "title": "Consents Response",
      "required": [
        "consentStatus",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenSca Method": {
          "$ref": "#/definitions/Authentication"
        },
        "consentId": {
          "description": "Identification of the consent resource as it is used in the API structure. Shall be contained, if a consent resource was generated.",
          "type": "string",
          "example": "qwer3456tzui7890"
        },
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        }
      }
    },
    "ConsentsResponse125": {
      "type": "object",
      "title": "Consents Response125",
      "required": [
        "access",
        "recurringIndicator",
        "validUntil",
        "frequencyPerDay",
        "lastActionDate",
        "consentStatus"
      ],
      "properties": {
        "access": {
          "$ref": "#/definitions/AccountAccess"
        },
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "frequencyPerDay": {
          "type": "integer",
          "format": "int32"
        },
        "lastActionDate": {
          "type": "string",
          "format": "date"
        },
        "recurringIndicator": {
          "description": "\"true\" if the consent is for recurring access to the account data \"false\", if the consent is for one access to the account data",
          "type": "boolean"
        },
        "scaStatus": {
          "description": "This data element is containing information about the status of the SCA method applied. This is free text but might be coded in a future version of the specification.",
          "type": "string"
        },
        "validUntil": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ConsentsResponse146": {
      "type": "object",
      "title": "Consents Response146",
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "ConsentsStatusResponse": {
      "type": "object",
      "title": "Consents Status Response",
      "required": [
        "consentStatus"
      ],
      "properties": {
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "scaStatus": {
          "description": "This data element is containing information about the status of the SCA method applied. This is free text but might be coded in a future version of the specification.",
          "type": "string"
        }
      }
    },
    "ContentType": {
      "type": "string",
      "title": "Content-Type",
      "enum": [
        "application/json",
        "application/xml",
        "application/text"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "Enum_applicationjson"
        },
        {
          "description": "",
          "name": "Enum_applicationxml"
        },
        {
          "description": "",
          "name": "Enum_applicationtext"
        }
      ],
      "example": "application/json"
    },
    "ExchangeRate": {
      "type": "object",
      "title": "ExchangeRate",
      "required": [
        "currencyFrom",
        "rateFrom",
        "currencyTo",
        "rateTo",
        "rateDate"
      ],
      "properties": {
        "currencyFrom": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        },
        "currencyTo": {
          "description": "ISO 4217 Alpha 3 currency code",
          "type": "string",
          "maxLength": 3,
          "example": "EUR"
        },
        "rateContract": {
          "type": "string"
        },
        "rateDate": {
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        },
        "rateFrom": {
          "type": "string"
        },
        "rateTo": {
          "type": "string"
        }
      }
    },
    "Frequency": {
      "type": "string",
      "title": "frequency",
      "enum": [
        "Daily",
        "Weekly",
        "EveryTwoWeeks",
        "Monthly",
        "EveryTwoMonths",
        "Quarterly",
        "SemiAnnual",
        "Annual"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "Daily"
        },
        {
          "description": "",
          "name": "Weekly"
        },
        {
          "description": "",
          "name": "EveryTwoWeeks"
        },
        {
          "description": "",
          "name": "Monthly"
        },
        {
          "description": "",
          "name": "EveryTwoMonths"
        },
        {
          "description": "",
          "name": "Quarterly"
        },
        {
          "description": "",
          "name": "SemiAnnual"
        },
        {
          "description": "",
          "name": "Annual"
        }
      ],
      "example": "Daily"
    },
    "FundsConfirmationsRequest": {
      "type": "object",
      "title": "Funds Confirmations Request",
      "required": [
        "account",
        "instructedAmount"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/AccountReference"
        },
        "cardNumber": {
          "type": "string"
        },
        "instructedAmount": {
          "$ref": "#/definitions/Amount"
        },
        "payee": {
          "type": "string",
          "maxLength": 70
        }
      }
    },
    "FundsConfirmationsResponse": {
      "type": "object",
      "title": "Funds Confirmations Response",
      "required": [
        "fundsAvaiable"
      ],
      "properties": {
        "fundsAvaiable": {
          "description": "Equals “true” if sufficient funds are available at the time of the request, “false” otherwise.",
          "type": "boolean"
        }
      }
    },
    "Links": {
      "type": "object",
      "title": "Links",
      "properties": {
        "account": {
          "description": "A link to the resource providing the details of one account",
          "type": "string"
        },
        "authoriseTransaction": {
          "description": "The link to the payment initiation or consent resource, where the “Transaction Authorization”Request“ is sent to. This is the link to the resource which will authorize the payment or the consent by checking the SCA authentication data within the Embedded SCA approach.",
          "type": "string"
        },
        "balances": {
          "description": "A link to the resource providing the balance of a dedicated account.",
          "type": "string"
        },
        "download": {
          "description": "Download link for huge AIS data packages.",
          "type": "string"
        },
        "first": {
          "description": "Navigation link for paginated account reports.",
          "type": "string"
        },
        "last": {
          "description": "Navigation link for paginated account reports.",
          "type": "string"
        },
        "next": {
          "description": "Navigation link for paginated account reports.",
          "type": "string"
        },
        "previous": {
          "description": "Navigation link for paginated account reports.",
          "type": "string"
        },
        "scaOAuth": {
          "description": "The link refers to a JSON document specifying the OAuth details of the ASPSP’s authorisation server. JSON document follows the definition given in https://tools.ietf.org/html/draft-ietf-oauth- discovery.",
          "type": "string"
        },
        "scaRedirect": {
          "description": "A link to an ASPSP site where SCA is performed within the Redirect SCA approach.",
          "type": "string"
        },
        "selectAuthenticationMethod": {
          "description": "This is a link to a resource, where the TPP can select the applicable second factor authentication methods for the PSU, if there were several available authentication methods.",
          "type": "string"
        },
        "self": {
          "description": "The link to the payment initiation resource created by the request itself. This link can be used later to retrieve the transaction status of the payment initiation.",
          "type": "string"
        },
        "status": {
          "description": "Status of the resource.",
          "type": "string"
        },
        "transactions": {
          "description": "A link to the resource providing the transaction history of a dediated amount.",
          "type": "string"
        },
        "transactionsDetails": {
          "description": "A link to the resource providing details of a dedicated transaction.",
          "type": "string"
        },
        "updateProprietaryData": {
          "description": "The link to the payment initiation or account information resource, which needs to be updated by the proprietary data.",
          "type": "string"
        },
        "updatePsuAuthentication": {
          "description": "The link to the payment initiation or account information resource, which needs to be updated by a psu password and eventually the psu identification if not delivered yet.",
          "type": "string"
        },
        "updatePsuIdentification": {
          "description": "The link to the payment initiation or account information resource, which needs to be updated by the psu identification if not delivered yet.",
          "type": "string"
        }
      }
    },
    "MessageCode": {
      "type": "string",
      "title": "MessageCode",
      "enum": [
        "CERTIFICATE_INVALID",
        "CERTIFICATE_EXPIRED",
        "CERTIFICATE_BLOCKED",
        "CERTIFICATE_REVOKED",
        "CERTIFICATE_MISSING",
        "SIGNATURE_INVALID",
        "SIGNATURE_MISSING",
        "FORMAT_ERROR",
        "PARAMETER_NOT_SUPPORTED",
        "PSU_CREDENTIALS_INVALID",
        "SERVICE_INVALID",
        "SERVICE_BLOCKED",
        "CORPORATE_ID_INVALID",
        "CONSENT_UNKNOWN",
        "CONSENT_INVALID",
        "CONSENT_EXPIRED",
        "TOKEN_UNKNOWN",
        "TOKEN_INVALID",
        "TOKEN_EXPIRED",
        "RESOURCE_UNKNOWN",
        "RESOURCE_EXPIRED",
        "TIMESTAMP_INVALID",
        "PERIOD_INVALID",
        "SCA_METHOD_UNKNOWN",
        "PRODUCT_INVALID",
        "PRODUCT_UNKNOWN",
        "PAYMENT_FAILED",
        "REQUIRED_KID_MISSING",
        "EXECUTION_DATE_INVALID",
        "SESSIONS_NOT_SUPPORTED",
        "ACCESS_EXCEEDED",
        "REQUESTED_FORMATS_INVALID",
        "CARD_INVALID",
        "NO_PIIS_ACTIVATION"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "CERTIFICATE_INVALID"
        },
        {
          "description": "",
          "name": "CERTIFICATE_EXPIRED"
        },
        {
          "description": "",
          "name": "CERTIFICATE_BLOCKED"
        },
        {
          "description": "",
          "name": "CERTIFICATE_REVOKED"
        },
        {
          "description": "",
          "name": "CERTIFICATE_MISSING"
        },
        {
          "description": "",
          "name": "SIGNATURE_INVALID"
        },
        {
          "description": "",
          "name": "SIGNATURE_MISSING"
        },
        {
          "description": "",
          "name": "FORMAT_ERROR"
        },
        {
          "description": "",
          "name": "PARAMETER_NOT_SUPPORTED"
        },
        {
          "description": "",
          "name": "PSU_CREDENTIALS_INVALID"
        },
        {
          "description": "",
          "name": "SERVICE_INVALID"
        },
        {
          "description": "",
          "name": "SERVICE_BLOCKED"
        },
        {
          "description": "",
          "name": "CORPORATE_ID_INVALID"
        },
        {
          "description": "",
          "name": "CONSENT_UNKNOWN"
        },
        {
          "description": "",
          "name": "CONSENT_INVALID"
        },
        {
          "description": "",
          "name": "CONSENT_EXPIRED"
        },
        {
          "description": "",
          "name": "TOKEN_UNKNOWN"
        },
        {
          "description": "",
          "name": "TOKEN_INVALID"
        },
        {
          "description": "",
          "name": "TOKEN_EXPIRED"
        },
        {
          "description": "",
          "name": "RESOURCE_UNKNOWN"
        },
        {
          "description": "",
          "name": "RESOURCE_EXPIRED"
        },
        {
          "description": "",
          "name": "TIMESTAMP_INVALID"
        },
        {
          "description": "",
          "name": "PERIOD_INVALID"
        },
        {
          "description": "",
          "name": "SCA_METHOD_UNKNOWN"
        },
        {
          "description": "",
          "name": "PRODUCT_INVALID"
        },
        {
          "description": "",
          "name": "PRODUCT_UNKNOWN"
        },
        {
          "description": "",
          "name": "PAYMENT_FAILED"
        },
        {
          "description": "",
          "name": "REQUIRED_KID_MISSING"
        },
        {
          "description": "",
          "name": "EXECUTION_DATE_INVALID"
        },
        {
          "description": "",
          "name": "SESSIONS_NOT_SUPPORTED"
        },
        {
          "description": "",
          "name": "ACCESS_EXCEEDED"
        },
        {
          "description": "",
          "name": "REQUESTED_FORMATS_INVALID"
        },
        {
          "description": "",
          "name": "CARD_INVALID"
        },
        {
          "description": "",
          "name": "NO_PIIS_ACTIVATION"
        }
      ],
      "example": "CERTIFICATE_INVALID"
    },
    "OtpFormat": {
      "type": "string",
      "title": "OtpFormat",
      "enum": [
        "characters",
        "integer"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "characters"
        },
        {
          "description": "",
          "name": "integer"
        }
      ],
      "example": "characters"
    },
    "PSUData": {
      "type": "object",
      "title": "PSUData",
      "properties": {
        "password": {
          "type": "string",
          "example": "very42secret%"
        }
      }
    },
    "PaymentProduct": {
      "type": "string",
      "title": "payment-product",
      "enum": [
        "sepa-credit-transfers",
        "instant-sepa-credit-transfers",
        "target-2-payments",
        "cross-border-credit-transfers"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "sepacredittransfers"
        },
        {
          "description": "",
          "name": "instantsepacredittransfers"
        },
        {
          "description": "",
          "name": "target2payments"
        },
        {
          "description": "",
          "name": "crossbordercredittransfers"
        }
      ],
      "example": "sepa-credit-transfers"
    },
    "PaymentService": {
      "type": "string",
      "title": "payment-service",
      "enum": [
        "payments",
        "bulk-payments",
        "periodic-payments"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "payments"
        },
        {
          "description": "",
          "name": "bulkpayments"
        },
        {
          "description": "",
          "name": "periodicpayments"
        }
      ],
      "example": "payments"
    },
    "PaymentidRequest": {
      "type": "object",
      "title": "PaymentId Request",
      "properties": {
        "authenticationMethodId": {
          "type": "string"
        },
        "psuData": {
          "$ref": "#/definitions/PSUData"
        },
        "scaAuthenticationData": {
          "type": "string"
        }
      }
    },
    "PaymentidResponse": {
      "type": "object",
      "title": "PaymentId Response",
      "required": [
        "transactionStatus"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "consentStatus": {
          "$ref": "#/definitions/ConsentStatus"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "PaymentidStatusResponse": {
      "type": "object",
      "title": "PaymentId Status Response",
      "properties": {
        "scaStatus": {
          "description": "This data element is containing information about the status of the SCA method applied. This is free text but might be coded in a future version of the specification.",
          "type": "string"
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "PaymentsResponse": {
      "type": "object",
      "title": "Payments Response",
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "paymentId": {
          "description": "resource identification of the generated payment initiation resource.",
          "type": "string"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "tppMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TppMessage261"
          }
        },
        "transactionFeeIndicator": {
          "type": "boolean"
        },
        "transactionFees": {
          "$ref": "#/definitions/Amount"
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "PeriodicPaymentsRequest": {
      "type": "object",
      "title": "Periodic Payments Request",
      "properties": {
        "dayOfExecution": {
          "type": "integer",
          "format": "int32",
          "maximum": 31,
          "minimum": 1
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "executionRule": {
          "type": "string"
        },
        "frequency": {
          "$ref": "#/definitions/Frequency"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "PeriodicPaymentsResponse": {
      "type": "object",
      "title": "Periodic Payments Response",
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "challengeData": {
          "$ref": "#/definitions/Challenge"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/Authentication"
        },
        "paymentId": {
          "description": "resource identification of the generated payment initiation resource.",
          "type": "string"
        },
        "psuMessage": {
          "description": "Text to be displayed to the PSU",
          "type": "string"
        },
        "scaMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication"
          }
        },
        "tppMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TppMessage261"
          }
        },
        "transactionFeeIndicator": {
          "type": "boolean"
        },
        "transactionFees": {
          "$ref": "#/definitions/Amount"
        },
        "transactionStatus": {
          "$ref": "#/definitions/TransactionStatus"
        }
      }
    },
    "Protocol": {
      "type": "string",
      "title": "protocol",
      "enum": [
        "http",
        "https"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "http"
        },
        {
          "description": "",
          "name": "https"
        }
      ],
      "example": "http"
    },
    "Remittance": {
      "type": "object",
      "title": "Remittance",
      "required": [
        "reference"
      ],
      "properties": {
        "reference": {
          "type": "string",
          "maxLength": 35
        },
        "referenceIssuer": {
          "type": "string",
          "maxLength": 35
        },
        "referenceType": {
          "type": "string",
          "maxLength": 35
        }
      }
    },
    "TppMessage": {
      "type": "object",
      "title": "TppMessage",
      "required": [
        "category",
        "code",
        "text"
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "code": {
          "$ref": "#/definitions/MessageCode"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "maxLength": 512,
          "example": "additional text information of the ASPSP up to 512 characters"
        }
      }
    },
    "TppMessage261": {
      "type": "object",
      "title": "TppMessage261",
      "required": [
        "category",
        "code",
        "text"
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "code": {
          "$ref": "#/definitions/MessageCode"
        },
        "path": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "maxLength": 512,
          "example": "additional text information of the ASPSP up to 512 characters"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "title": "Transaction",
      "required": [
        "transactionAmount"
      ],
      "properties": {
        "_links": {
          "description": "The following links could be used here: transactionDetails for retrieving details of a transaction.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "bankTransactionCode": {
          "description": "Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO20022",
          "type": "string"
        },
        "bookingDate": {
          "description": "The Date when an entry is posted to an account on the ASPSPs books.",
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        },
        "creditorAccount": {
          "$ref": "#/definitions/AccountReference"
        },
        "creditorId": {
          "description": "Identification of Creditors, e.g. a SEPA Creditor ID",
          "type": "string",
          "maxLength": 35
        },
        "creditorName": {
          "description": "Identification of Creditors, e.g. a SEPA Creditor ID",
          "type": "string",
          "maxLength": 70
        },
        "debtorAccount": {
          "$ref": "#/definitions/AccountReference"
        },
        "debtorName": {
          "description": "Name of the debtor if a \"Credited\" transaction",
          "type": "string",
          "maxLength": 70
        },
        "endToEndId": {
          "description": "Unique end to end identity.",
          "type": "string",
          "maxLength": 35
        },
        "entryReference": {
          "description": "Is the identification of the transaction as used e.g. for reference for deltafunction on application level. The same identification as for example used within camt.05x messages",
          "type": "string",
          "maxLength": 35
        },
        "exchangeRates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRate"
          }
        },
        "mandateId": {
          "description": "Identification of a Cheque.",
          "type": "string",
          "maxLength": 35,
          "example": "Mandate-2018-04-20-1234"
        },
        "proprietaryBankTransactionCode": {
          "description": "proprietary bank transaction code as used within a community or within an ASPSP e.g. for MT94x based transaction reports",
          "type": "string",
          "maxLength": 35,
          "example": "PMNT-RCVD-ESDD"
        },
        "puposeCode": {
          "type": "string"
        },
        "remittanceInformationStructured": {
          "description": "Reference to be transported in the field.",
          "type": "string",
          "maxLength": 140
        },
        "transactionAmount": {
          "$ref": "#/definitions/Amount"
        },
        "transactionId": {
          "description": "Can be used as access-id in the API, where more details on an transaction is offered.",
          "type": "string"
        },
        "ultimateCreditor": {
          "type": "string",
          "maxLength": 70
        },
        "ultimateDebtor": {
          "type": "string",
          "maxLength": 70
        },
        "valueDate": {
          "description": "The Date at which assets become available to the account owner in case of a credit",
          "type": "string",
          "format": "date",
          "example": "2017-10-30"
        }
      }
    },
    "TransactionStatus": {
      "type": "string",
      "title": "TransactionStatus",
      "enum": [
        "ACCP",
        "ACSC",
        "ACSP",
        "ACTC",
        "ACWC",
        "ACWP",
        "RCVD",
        "PDNG",
        "RJCT"
      ],
      "x-enum-elements": [
        {
          "description": "",
          "name": "ACCP"
        },
        {
          "description": "",
          "name": "ACSC"
        },
        {
          "description": "",
          "name": "ACSP"
        },
        {
          "description": "",
          "name": "ACTC"
        },
        {
          "description": "",
          "name": "ACWC"
        },
        {
          "description": "",
          "name": "ACWP"
        },
        {
          "description": "",
          "name": "RCVD"
        },
        {
          "description": "",
          "name": "PDNG"
        },
        {
          "description": "",
          "name": "RJCT"
        }
      ],
      "example": "ACCP"
    }
  }
}`))
}
