// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/openpsd/psd2-server/models"
)

// PaymentIDStatusByPaymentServiceAndPaymentProductGetOKCode is the HTTP code returned for type PaymentIDStatusByPaymentServiceAndPaymentProductGetOK
const PaymentIDStatusByPaymentServiceAndPaymentProductGetOKCode int = 200

/*PaymentIDStatusByPaymentServiceAndPaymentProductGetOK OK

swagger:response paymentIdStatusByPaymentServiceAndPaymentProductGetOK
*/
type PaymentIDStatusByPaymentServiceAndPaymentProductGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.PaymentidStatusResponse `json:"body,omitempty"`
}

// NewPaymentIDStatusByPaymentServiceAndPaymentProductGetOK creates PaymentIDStatusByPaymentServiceAndPaymentProductGetOK with default headers values
func NewPaymentIDStatusByPaymentServiceAndPaymentProductGetOK() *PaymentIDStatusByPaymentServiceAndPaymentProductGetOK {

	return &PaymentIDStatusByPaymentServiceAndPaymentProductGetOK{}
}

// WithPayload adds the payload to the payment Id status by payment service and payment product get o k response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetOK) WithPayload(payload *models.PaymentidStatusResponse) *PaymentIDStatusByPaymentServiceAndPaymentProductGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id status by payment service and payment product get o k response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetOK) SetPayload(payload *models.PaymentidStatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequestCode is the HTTP code returned for type PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest
const PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequestCode int = 400

/*PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest Bad Request

swagger:response paymentIdStatusByPaymentServiceAndPaymentProductGetBadRequest
*/
type PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewPaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest creates PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest with default headers values
func NewPaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest() *PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest {

	return &PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest{}
}

// WithPayload adds the payload to the payment Id status by payment service and payment product get bad request response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest) WithPayload(payload *models.TppMessage) *PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id status by payment service and payment product get bad request response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorizedCode is the HTTP code returned for type PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized
const PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorizedCode int = 401

/*PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized Unauthorized

swagger:response paymentIdStatusByPaymentServiceAndPaymentProductGetUnauthorized
*/
type PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewPaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized creates PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized with default headers values
func NewPaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized() *PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized {

	return &PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized{}
}

// WithPayload adds the payload to the payment Id status by payment service and payment product get unauthorized response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized) WithPayload(payload *models.TppMessage) *PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id status by payment service and payment product get unauthorized response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PaymentIDStatusByPaymentServiceAndPaymentProductGetForbiddenCode is the HTTP code returned for type PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden
const PaymentIDStatusByPaymentServiceAndPaymentProductGetForbiddenCode int = 403

/*PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden Forbidden

swagger:response paymentIdStatusByPaymentServiceAndPaymentProductGetForbidden
*/
type PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewPaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden creates PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden with default headers values
func NewPaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden() *PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden {

	return &PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden{}
}

// WithPayload adds the payload to the payment Id status by payment service and payment product get forbidden response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden) WithPayload(payload *models.TppMessage) *PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id status by payment service and payment product get forbidden response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault Internal Server Error

swagger:response paymentIdStatusByPaymentServiceAndPaymentProductGetDefault
*/
type PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewPaymentIDStatusByPaymentServiceAndPaymentProductGetDefault creates PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault with default headers values
func NewPaymentIDStatusByPaymentServiceAndPaymentProductGetDefault(code int) *PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault {
	if code <= 0 {
		code = 500
	}

	return &PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the payment Id status by payment service and payment product get default response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault) WithStatusCode(code int) *PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the payment Id status by payment service and payment product get default response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the payment Id status by payment service and payment product get default response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault) WithPayload(payload *models.TppMessage) *PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id status by payment service and payment product get default response
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
