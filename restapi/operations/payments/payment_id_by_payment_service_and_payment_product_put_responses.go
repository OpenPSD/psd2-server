// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * 2018 - OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/openpsd/psd2-server/models"
)

// PaymentIDByPaymentServiceAndPaymentProductPutCreatedCode is the HTTP code returned for type PaymentIDByPaymentServiceAndPaymentProductPutCreated
const PaymentIDByPaymentServiceAndPaymentProductPutCreatedCode int = 201

/*PaymentIDByPaymentServiceAndPaymentProductPutCreated OK result with Decoupled Approach

swagger:response paymentIdByPaymentServiceAndPaymentProductPutCreated
*/
type PaymentIDByPaymentServiceAndPaymentProductPutCreated struct {

	/*
	  In: Body
	*/
	Payload *models.PaymentidResponse `json:"body,omitempty"`
}

// NewPaymentIDByPaymentServiceAndPaymentProductPutCreated creates PaymentIDByPaymentServiceAndPaymentProductPutCreated with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductPutCreated() *PaymentIDByPaymentServiceAndPaymentProductPutCreated {

	return &PaymentIDByPaymentServiceAndPaymentProductPutCreated{}
}

// WithPayload adds the payload to the payment Id by payment service and payment product put created response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutCreated) WithPayload(payload *models.PaymentidResponse) *PaymentIDByPaymentServiceAndPaymentProductPutCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id by payment service and payment product put created response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutCreated) SetPayload(payload *models.PaymentidResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDByPaymentServiceAndPaymentProductPutCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PaymentIDByPaymentServiceAndPaymentProductPutBadRequestCode is the HTTP code returned for type PaymentIDByPaymentServiceAndPaymentProductPutBadRequest
const PaymentIDByPaymentServiceAndPaymentProductPutBadRequestCode int = 400

/*PaymentIDByPaymentServiceAndPaymentProductPutBadRequest Bad Request

swagger:response paymentIdByPaymentServiceAndPaymentProductPutBadRequest
*/
type PaymentIDByPaymentServiceAndPaymentProductPutBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewPaymentIDByPaymentServiceAndPaymentProductPutBadRequest creates PaymentIDByPaymentServiceAndPaymentProductPutBadRequest with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductPutBadRequest() *PaymentIDByPaymentServiceAndPaymentProductPutBadRequest {

	return &PaymentIDByPaymentServiceAndPaymentProductPutBadRequest{}
}

// WithPayload adds the payload to the payment Id by payment service and payment product put bad request response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutBadRequest) WithPayload(payload *models.TppMessage) *PaymentIDByPaymentServiceAndPaymentProductPutBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id by payment service and payment product put bad request response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutBadRequest) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDByPaymentServiceAndPaymentProductPutBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PaymentIDByPaymentServiceAndPaymentProductPutUnauthorizedCode is the HTTP code returned for type PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized
const PaymentIDByPaymentServiceAndPaymentProductPutUnauthorizedCode int = 401

/*PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized Unauthorized

swagger:response paymentIdByPaymentServiceAndPaymentProductPutUnauthorized
*/
type PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewPaymentIDByPaymentServiceAndPaymentProductPutUnauthorized creates PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductPutUnauthorized() *PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized {

	return &PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized{}
}

// WithPayload adds the payload to the payment Id by payment service and payment product put unauthorized response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized) WithPayload(payload *models.TppMessage) *PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id by payment service and payment product put unauthorized response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDByPaymentServiceAndPaymentProductPutUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PaymentIDByPaymentServiceAndPaymentProductPutForbiddenCode is the HTTP code returned for type PaymentIDByPaymentServiceAndPaymentProductPutForbidden
const PaymentIDByPaymentServiceAndPaymentProductPutForbiddenCode int = 403

/*PaymentIDByPaymentServiceAndPaymentProductPutForbidden Forbidden

swagger:response paymentIdByPaymentServiceAndPaymentProductPutForbidden
*/
type PaymentIDByPaymentServiceAndPaymentProductPutForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewPaymentIDByPaymentServiceAndPaymentProductPutForbidden creates PaymentIDByPaymentServiceAndPaymentProductPutForbidden with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductPutForbidden() *PaymentIDByPaymentServiceAndPaymentProductPutForbidden {

	return &PaymentIDByPaymentServiceAndPaymentProductPutForbidden{}
}

// WithPayload adds the payload to the payment Id by payment service and payment product put forbidden response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutForbidden) WithPayload(payload *models.TppMessage) *PaymentIDByPaymentServiceAndPaymentProductPutForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id by payment service and payment product put forbidden response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutForbidden) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDByPaymentServiceAndPaymentProductPutForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PaymentIDByPaymentServiceAndPaymentProductPutDefault Internal Server Error

swagger:response paymentIdByPaymentServiceAndPaymentProductPutDefault
*/
type PaymentIDByPaymentServiceAndPaymentProductPutDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewPaymentIDByPaymentServiceAndPaymentProductPutDefault creates PaymentIDByPaymentServiceAndPaymentProductPutDefault with default headers values
func NewPaymentIDByPaymentServiceAndPaymentProductPutDefault(code int) *PaymentIDByPaymentServiceAndPaymentProductPutDefault {
	if code <= 0 {
		code = 500
	}

	return &PaymentIDByPaymentServiceAndPaymentProductPutDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the payment Id by payment service and payment product put default response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutDefault) WithStatusCode(code int) *PaymentIDByPaymentServiceAndPaymentProductPutDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the payment Id by payment service and payment product put default response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the payment Id by payment service and payment product put default response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutDefault) WithPayload(payload *models.TppMessage) *PaymentIDByPaymentServiceAndPaymentProductPutDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the payment Id by payment service and payment product put default response
func (o *PaymentIDByPaymentServiceAndPaymentProductPutDefault) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PaymentIDByPaymentServiceAndPaymentProductPutDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
