// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * 2018 - OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PeriodicPaymentsByPaymentProductPostHandlerFunc turns a function with the right signature into a periodic payments by payment product post handler
type PeriodicPaymentsByPaymentProductPostHandlerFunc func(PeriodicPaymentsByPaymentProductPostParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PeriodicPaymentsByPaymentProductPostHandlerFunc) Handle(params PeriodicPaymentsByPaymentProductPostParams) middleware.Responder {
	return fn(params)
}

// PeriodicPaymentsByPaymentProductPostHandler interface for that can handle valid periodic payments by payment product post params
type PeriodicPaymentsByPaymentProductPostHandler interface {
	Handle(PeriodicPaymentsByPaymentProductPostParams) middleware.Responder
}

// NewPeriodicPaymentsByPaymentProductPost creates a new http.Handler for the periodic payments by payment product post operation
func NewPeriodicPaymentsByPaymentProductPost(ctx *middleware.Context, handler PeriodicPaymentsByPaymentProductPostHandler) *PeriodicPaymentsByPaymentProductPost {
	return &PeriodicPaymentsByPaymentProductPost{Context: ctx, Handler: handler}
}

/*PeriodicPaymentsByPaymentProductPost swagger:route POST /periodic-payments/{payment-product} payments periodicPaymentsByPaymentProductPost

create a periodic payment

Creates a payment initiation resource addressable under {paymentID} with all data relevant for the corresponding payment product. This is the first step in the API to initiate the related payment

*/
type PeriodicPaymentsByPaymentProductPost struct {
	Context *middleware.Context
	Handler PeriodicPaymentsByPaymentProductPostHandler
}

func (o *PeriodicPaymentsByPaymentProductPost) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPeriodicPaymentsByPaymentProductPostParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
