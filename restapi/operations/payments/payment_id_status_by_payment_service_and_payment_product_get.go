// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PaymentIDStatusByPaymentServiceAndPaymentProductGetHandlerFunc turns a function with the right signature into a payment Id status by payment service and payment product get handler
type PaymentIDStatusByPaymentServiceAndPaymentProductGetHandlerFunc func(PaymentIDStatusByPaymentServiceAndPaymentProductGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PaymentIDStatusByPaymentServiceAndPaymentProductGetHandlerFunc) Handle(params PaymentIDStatusByPaymentServiceAndPaymentProductGetParams) middleware.Responder {
	return fn(params)
}

// PaymentIDStatusByPaymentServiceAndPaymentProductGetHandler interface for that can handle valid payment Id status by payment service and payment product get params
type PaymentIDStatusByPaymentServiceAndPaymentProductGetHandler interface {
	Handle(PaymentIDStatusByPaymentServiceAndPaymentProductGetParams) middleware.Responder
}

// NewPaymentIDStatusByPaymentServiceAndPaymentProductGet creates a new http.Handler for the payment Id status by payment service and payment product get operation
func NewPaymentIDStatusByPaymentServiceAndPaymentProductGet(ctx *middleware.Context, handler PaymentIDStatusByPaymentServiceAndPaymentProductGetHandler) *PaymentIDStatusByPaymentServiceAndPaymentProductGet {
	return &PaymentIDStatusByPaymentServiceAndPaymentProductGet{Context: ctx, Handler: handler}
}

/*PaymentIDStatusByPaymentServiceAndPaymentProductGet swagger:route GET /{payment-service}/{payment-product}/{paymentId}/status payments paymentIdStatusByPaymentServiceAndPaymentProductGet

get the status of a payment

Reads the transaction status of the payment

*/
type PaymentIDStatusByPaymentServiceAndPaymentProductGet struct {
	Context *middleware.Context
	Handler PaymentIDStatusByPaymentServiceAndPaymentProductGetHandler
}

func (o *PaymentIDStatusByPaymentServiceAndPaymentProductGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPaymentIDStatusByPaymentServiceAndPaymentProductGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
