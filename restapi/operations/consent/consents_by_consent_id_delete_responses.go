// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * 2018 - OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package consent

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/openpsd/psd2-server/models"
)

// ConsentsByConsentIDDeleteNoContentCode is the HTTP code returned for type ConsentsByConsentIDDeleteNoContent
const ConsentsByConsentIDDeleteNoContentCode int = 204

/*ConsentsByConsentIDDeleteNoContent Consent resource was successfully deleted.

swagger:response consentsByConsentIdDeleteNoContent
*/
type ConsentsByConsentIDDeleteNoContent struct {
}

// NewConsentsByConsentIDDeleteNoContent creates ConsentsByConsentIDDeleteNoContent with default headers values
func NewConsentsByConsentIDDeleteNoContent() *ConsentsByConsentIDDeleteNoContent {

	return &ConsentsByConsentIDDeleteNoContent{}
}

// WriteResponse to the client
func (o *ConsentsByConsentIDDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// ConsentsByConsentIDDeleteBadRequestCode is the HTTP code returned for type ConsentsByConsentIDDeleteBadRequest
const ConsentsByConsentIDDeleteBadRequestCode int = 400

/*ConsentsByConsentIDDeleteBadRequest Bad Request

swagger:response consentsByConsentIdDeleteBadRequest
*/
type ConsentsByConsentIDDeleteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewConsentsByConsentIDDeleteBadRequest creates ConsentsByConsentIDDeleteBadRequest with default headers values
func NewConsentsByConsentIDDeleteBadRequest() *ConsentsByConsentIDDeleteBadRequest {

	return &ConsentsByConsentIDDeleteBadRequest{}
}

// WithPayload adds the payload to the consents by consent Id delete bad request response
func (o *ConsentsByConsentIDDeleteBadRequest) WithPayload(payload *models.TppMessage) *ConsentsByConsentIDDeleteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the consents by consent Id delete bad request response
func (o *ConsentsByConsentIDDeleteBadRequest) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConsentsByConsentIDDeleteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConsentsByConsentIDDeleteUnauthorizedCode is the HTTP code returned for type ConsentsByConsentIDDeleteUnauthorized
const ConsentsByConsentIDDeleteUnauthorizedCode int = 401

/*ConsentsByConsentIDDeleteUnauthorized Unauthorized

swagger:response consentsByConsentIdDeleteUnauthorized
*/
type ConsentsByConsentIDDeleteUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewConsentsByConsentIDDeleteUnauthorized creates ConsentsByConsentIDDeleteUnauthorized with default headers values
func NewConsentsByConsentIDDeleteUnauthorized() *ConsentsByConsentIDDeleteUnauthorized {

	return &ConsentsByConsentIDDeleteUnauthorized{}
}

// WithPayload adds the payload to the consents by consent Id delete unauthorized response
func (o *ConsentsByConsentIDDeleteUnauthorized) WithPayload(payload *models.TppMessage) *ConsentsByConsentIDDeleteUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the consents by consent Id delete unauthorized response
func (o *ConsentsByConsentIDDeleteUnauthorized) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConsentsByConsentIDDeleteUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConsentsByConsentIDDeleteForbiddenCode is the HTTP code returned for type ConsentsByConsentIDDeleteForbidden
const ConsentsByConsentIDDeleteForbiddenCode int = 403

/*ConsentsByConsentIDDeleteForbidden Forbidden

swagger:response consentsByConsentIdDeleteForbidden
*/
type ConsentsByConsentIDDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewConsentsByConsentIDDeleteForbidden creates ConsentsByConsentIDDeleteForbidden with default headers values
func NewConsentsByConsentIDDeleteForbidden() *ConsentsByConsentIDDeleteForbidden {

	return &ConsentsByConsentIDDeleteForbidden{}
}

// WithPayload adds the payload to the consents by consent Id delete forbidden response
func (o *ConsentsByConsentIDDeleteForbidden) WithPayload(payload *models.TppMessage) *ConsentsByConsentIDDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the consents by consent Id delete forbidden response
func (o *ConsentsByConsentIDDeleteForbidden) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConsentsByConsentIDDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ConsentsByConsentIDDeleteDefault Internal Server Error

swagger:response consentsByConsentIdDeleteDefault
*/
type ConsentsByConsentIDDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewConsentsByConsentIDDeleteDefault creates ConsentsByConsentIDDeleteDefault with default headers values
func NewConsentsByConsentIDDeleteDefault(code int) *ConsentsByConsentIDDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &ConsentsByConsentIDDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the consents by consent Id delete default response
func (o *ConsentsByConsentIDDeleteDefault) WithStatusCode(code int) *ConsentsByConsentIDDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the consents by consent Id delete default response
func (o *ConsentsByConsentIDDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the consents by consent Id delete default response
func (o *ConsentsByConsentIDDeleteDefault) WithPayload(payload *models.TppMessage) *ConsentsByConsentIDDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the consents by consent Id delete default response
func (o *ConsentsByConsentIDDeleteDefault) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConsentsByConsentIDDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
