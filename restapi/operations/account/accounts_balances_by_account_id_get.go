// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// AccountsBalancesByAccountIDGetHandlerFunc turns a function with the right signature into a accounts balances by account Id get handler
type AccountsBalancesByAccountIDGetHandlerFunc func(AccountsBalancesByAccountIDGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AccountsBalancesByAccountIDGetHandlerFunc) Handle(params AccountsBalancesByAccountIDGetParams) middleware.Responder {
	return fn(params)
}

// AccountsBalancesByAccountIDGetHandler interface for that can handle valid accounts balances by account Id get params
type AccountsBalancesByAccountIDGetHandler interface {
	Handle(AccountsBalancesByAccountIDGetParams) middleware.Responder
}

// NewAccountsBalancesByAccountIDGet creates a new http.Handler for the accounts balances by account Id get operation
func NewAccountsBalancesByAccountIDGet(ctx *middleware.Context, handler AccountsBalancesByAccountIDGetHandler) *AccountsBalancesByAccountIDGet {
	return &AccountsBalancesByAccountIDGet{Context: ctx, Handler: handler}
}

/*AccountsBalancesByAccountIDGet swagger:route GET /accounts/{account-id}/balances account accountsBalancesByAccountIdGet

balances for account

Reads the balance list for a given account.

*/
type AccountsBalancesByAccountIDGet struct {
	Context *middleware.Context
	Handler AccountsBalancesByAccountIDGetHandler
}

func (o *AccountsBalancesByAccountIDGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAccountsBalancesByAccountIDGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
