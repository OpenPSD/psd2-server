// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/openpsd/psd2-server/models"
)

// AccountsGetOKCode is the HTTP code returned for type AccountsGetOK
const AccountsGetOKCode int = 200

/*AccountsGetOK OK

swagger:response accountsGetOK
*/
type AccountsGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.AccountsResponse `json:"body,omitempty"`
}

// NewAccountsGetOK creates AccountsGetOK with default headers values
func NewAccountsGetOK() *AccountsGetOK {

	return &AccountsGetOK{}
}

// WithPayload adds the payload to the accounts get o k response
func (o *AccountsGetOK) WithPayload(payload *models.AccountsResponse) *AccountsGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts get o k response
func (o *AccountsGetOK) SetPayload(payload *models.AccountsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AccountsGetBadRequestCode is the HTTP code returned for type AccountsGetBadRequest
const AccountsGetBadRequestCode int = 400

/*AccountsGetBadRequest Bad Request

swagger:response accountsGetBadRequest
*/
type AccountsGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsGetBadRequest creates AccountsGetBadRequest with default headers values
func NewAccountsGetBadRequest() *AccountsGetBadRequest {

	return &AccountsGetBadRequest{}
}

// WithPayload adds the payload to the accounts get bad request response
func (o *AccountsGetBadRequest) WithPayload(payload *models.TppMessage) *AccountsGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts get bad request response
func (o *AccountsGetBadRequest) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AccountsGetUnauthorizedCode is the HTTP code returned for type AccountsGetUnauthorized
const AccountsGetUnauthorizedCode int = 401

/*AccountsGetUnauthorized Unauthorized

swagger:response accountsGetUnauthorized
*/
type AccountsGetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsGetUnauthorized creates AccountsGetUnauthorized with default headers values
func NewAccountsGetUnauthorized() *AccountsGetUnauthorized {

	return &AccountsGetUnauthorized{}
}

// WithPayload adds the payload to the accounts get unauthorized response
func (o *AccountsGetUnauthorized) WithPayload(payload *models.TppMessage) *AccountsGetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts get unauthorized response
func (o *AccountsGetUnauthorized) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsGetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AccountsGetForbiddenCode is the HTTP code returned for type AccountsGetForbidden
const AccountsGetForbiddenCode int = 403

/*AccountsGetForbidden Forbidden

swagger:response accountsGetForbidden
*/
type AccountsGetForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsGetForbidden creates AccountsGetForbidden with default headers values
func NewAccountsGetForbidden() *AccountsGetForbidden {

	return &AccountsGetForbidden{}
}

// WithPayload adds the payload to the accounts get forbidden response
func (o *AccountsGetForbidden) WithPayload(payload *models.TppMessage) *AccountsGetForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts get forbidden response
func (o *AccountsGetForbidden) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsGetForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AccountsGetDefault Internal Server Error

swagger:response accountsGetDefault
*/
type AccountsGetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsGetDefault creates AccountsGetDefault with default headers values
func NewAccountsGetDefault(code int) *AccountsGetDefault {
	if code <= 0 {
		code = 500
	}

	return &AccountsGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the accounts get default response
func (o *AccountsGetDefault) WithStatusCode(code int) *AccountsGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the accounts get default response
func (o *AccountsGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the accounts get default response
func (o *AccountsGetDefault) WithPayload(payload *models.TppMessage) *AccountsGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts get default response
func (o *AccountsGetDefault) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
