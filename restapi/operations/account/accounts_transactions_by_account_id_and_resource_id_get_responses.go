// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/openpsd/psd2-server/models"
)

// AccountsTransactionsByAccountIDAndResourceIDGetOKCode is the HTTP code returned for type AccountsTransactionsByAccountIDAndResourceIDGetOK
const AccountsTransactionsByAccountIDAndResourceIDGetOKCode int = 200

/*AccountsTransactionsByAccountIDAndResourceIDGetOK OK

swagger:response accountsTransactionsByAccountIdAndResourceIdGetOK
*/
type AccountsTransactionsByAccountIDAndResourceIDGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.AccountsTransactionsResponse81 `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetOK creates AccountsTransactionsByAccountIDAndResourceIDGetOK with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetOK() *AccountsTransactionsByAccountIDAndResourceIDGetOK {

	return &AccountsTransactionsByAccountIDAndResourceIDGetOK{}
}

// WithPayload adds the payload to the accounts transactions by account Id and resource Id get o k response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetOK) WithPayload(payload *models.AccountsTransactionsResponse81) *AccountsTransactionsByAccountIDAndResourceIDGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id and resource Id get o k response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetOK) SetPayload(payload *models.AccountsTransactionsResponse81) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDAndResourceIDGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AccountsTransactionsByAccountIDAndResourceIDGetBadRequestCode is the HTTP code returned for type AccountsTransactionsByAccountIDAndResourceIDGetBadRequest
const AccountsTransactionsByAccountIDAndResourceIDGetBadRequestCode int = 400

/*AccountsTransactionsByAccountIDAndResourceIDGetBadRequest Bad Request

swagger:response accountsTransactionsByAccountIdAndResourceIdGetBadRequest
*/
type AccountsTransactionsByAccountIDAndResourceIDGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetBadRequest creates AccountsTransactionsByAccountIDAndResourceIDGetBadRequest with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetBadRequest() *AccountsTransactionsByAccountIDAndResourceIDGetBadRequest {

	return &AccountsTransactionsByAccountIDAndResourceIDGetBadRequest{}
}

// WithPayload adds the payload to the accounts transactions by account Id and resource Id get bad request response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetBadRequest) WithPayload(payload *models.TppMessage) *AccountsTransactionsByAccountIDAndResourceIDGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id and resource Id get bad request response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetBadRequest) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDAndResourceIDGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AccountsTransactionsByAccountIDAndResourceIDGetUnauthorizedCode is the HTTP code returned for type AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized
const AccountsTransactionsByAccountIDAndResourceIDGetUnauthorizedCode int = 401

/*AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized Unauthorized

swagger:response accountsTransactionsByAccountIdAndResourceIdGetUnauthorized
*/
type AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetUnauthorized creates AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetUnauthorized() *AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized {

	return &AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized{}
}

// WithPayload adds the payload to the accounts transactions by account Id and resource Id get unauthorized response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized) WithPayload(payload *models.TppMessage) *AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id and resource Id get unauthorized response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDAndResourceIDGetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AccountsTransactionsByAccountIDAndResourceIDGetForbiddenCode is the HTTP code returned for type AccountsTransactionsByAccountIDAndResourceIDGetForbidden
const AccountsTransactionsByAccountIDAndResourceIDGetForbiddenCode int = 403

/*AccountsTransactionsByAccountIDAndResourceIDGetForbidden Forbidden

swagger:response accountsTransactionsByAccountIdAndResourceIdGetForbidden
*/
type AccountsTransactionsByAccountIDAndResourceIDGetForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetForbidden creates AccountsTransactionsByAccountIDAndResourceIDGetForbidden with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetForbidden() *AccountsTransactionsByAccountIDAndResourceIDGetForbidden {

	return &AccountsTransactionsByAccountIDAndResourceIDGetForbidden{}
}

// WithPayload adds the payload to the accounts transactions by account Id and resource Id get forbidden response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetForbidden) WithPayload(payload *models.TppMessage) *AccountsTransactionsByAccountIDAndResourceIDGetForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id and resource Id get forbidden response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetForbidden) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDAndResourceIDGetForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AccountsTransactionsByAccountIDAndResourceIDGetDefault Internal Server Error

swagger:response accountsTransactionsByAccountIdAndResourceIdGetDefault
*/
type AccountsTransactionsByAccountIDAndResourceIDGetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDAndResourceIDGetDefault creates AccountsTransactionsByAccountIDAndResourceIDGetDefault with default headers values
func NewAccountsTransactionsByAccountIDAndResourceIDGetDefault(code int) *AccountsTransactionsByAccountIDAndResourceIDGetDefault {
	if code <= 0 {
		code = 500
	}

	return &AccountsTransactionsByAccountIDAndResourceIDGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the accounts transactions by account Id and resource Id get default response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetDefault) WithStatusCode(code int) *AccountsTransactionsByAccountIDAndResourceIDGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the accounts transactions by account Id and resource Id get default response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the accounts transactions by account Id and resource Id get default response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetDefault) WithPayload(payload *models.TppMessage) *AccountsTransactionsByAccountIDAndResourceIDGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id and resource Id get default response
func (o *AccountsTransactionsByAccountIDAndResourceIDGetDefault) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDAndResourceIDGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
