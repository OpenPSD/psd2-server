// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * 2018 - OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// AccountsTransactionsByAccountIDAndResourceIDGetHandlerFunc turns a function with the right signature into a accounts transactions by account Id and resource Id get handler
type AccountsTransactionsByAccountIDAndResourceIDGetHandlerFunc func(AccountsTransactionsByAccountIDAndResourceIDGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AccountsTransactionsByAccountIDAndResourceIDGetHandlerFunc) Handle(params AccountsTransactionsByAccountIDAndResourceIDGetParams) middleware.Responder {
	return fn(params)
}

// AccountsTransactionsByAccountIDAndResourceIDGetHandler interface for that can handle valid accounts transactions by account Id and resource Id get params
type AccountsTransactionsByAccountIDAndResourceIDGetHandler interface {
	Handle(AccountsTransactionsByAccountIDAndResourceIDGetParams) middleware.Responder
}

// NewAccountsTransactionsByAccountIDAndResourceIDGet creates a new http.Handler for the accounts transactions by account Id and resource Id get operation
func NewAccountsTransactionsByAccountIDAndResourceIDGet(ctx *middleware.Context, handler AccountsTransactionsByAccountIDAndResourceIDGetHandler) *AccountsTransactionsByAccountIDAndResourceIDGet {
	return &AccountsTransactionsByAccountIDAndResourceIDGet{Context: ctx, Handler: handler}
}

/*AccountsTransactionsByAccountIDAndResourceIDGet swagger:route GET /accounts/{account-id}/transactions/{resourceId} account accountsTransactionsByAccountIdAndResourceIdGet

transaction details for transaction of an account

Reads transaction details of an addressed transaction.

*/
type AccountsTransactionsByAccountIDAndResourceIDGet struct {
	Context *middleware.Context
	Handler AccountsTransactionsByAccountIDAndResourceIDGetHandler
}

func (o *AccountsTransactionsByAccountIDAndResourceIDGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAccountsTransactionsByAccountIDAndResourceIDGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
