// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// AccountsGetHandlerFunc turns a function with the right signature into a accounts get handler
type AccountsGetHandlerFunc func(AccountsGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn AccountsGetHandlerFunc) Handle(params AccountsGetParams) middleware.Responder {
	return fn(params)
}

// AccountsGetHandler interface for that can handle valid accounts get params
type AccountsGetHandler interface {
	Handle(AccountsGetParams) middleware.Responder
}

// NewAccountsGet creates a new http.Handler for the accounts get operation
func NewAccountsGet(ctx *middleware.Context, handler AccountsGetHandler) *AccountsGet {
	return &AccountsGet{Context: ctx, Handler: handler}
}

/*AccountsGet swagger:route GET /accounts account accountsGet

list of accounts

Reads a list of bank accounts, with balances where required. It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. The addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, respectively the OAuth2 access token.

*/
type AccountsGet struct {
	Context *middleware.Context
	Handler AccountsGetHandler
}

func (o *AccountsGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewAccountsGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
