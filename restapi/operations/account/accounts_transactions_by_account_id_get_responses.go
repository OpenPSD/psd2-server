// Code generated by go-swagger; DO NOT EDIT.

// /**
//  * OpenPSD PSD2 Server
//  * (C) 2018 by OpenPSD - openpsd.org
//  * Released under the GNU General Public License
//  */

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/openpsd/psd2-server/models"
)

// AccountsTransactionsByAccountIDGetOKCode is the HTTP code returned for type AccountsTransactionsByAccountIDGetOK
const AccountsTransactionsByAccountIDGetOKCode int = 200

/*AccountsTransactionsByAccountIDGetOK OK

swagger:response accountsTransactionsByAccountIdGetOK
*/
type AccountsTransactionsByAccountIDGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.AccountsTransactionsResponse `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDGetOK creates AccountsTransactionsByAccountIDGetOK with default headers values
func NewAccountsTransactionsByAccountIDGetOK() *AccountsTransactionsByAccountIDGetOK {

	return &AccountsTransactionsByAccountIDGetOK{}
}

// WithPayload adds the payload to the accounts transactions by account Id get o k response
func (o *AccountsTransactionsByAccountIDGetOK) WithPayload(payload *models.AccountsTransactionsResponse) *AccountsTransactionsByAccountIDGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id get o k response
func (o *AccountsTransactionsByAccountIDGetOK) SetPayload(payload *models.AccountsTransactionsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AccountsTransactionsByAccountIDGetBadRequestCode is the HTTP code returned for type AccountsTransactionsByAccountIDGetBadRequest
const AccountsTransactionsByAccountIDGetBadRequestCode int = 400

/*AccountsTransactionsByAccountIDGetBadRequest Bad Request

swagger:response accountsTransactionsByAccountIdGetBadRequest
*/
type AccountsTransactionsByAccountIDGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDGetBadRequest creates AccountsTransactionsByAccountIDGetBadRequest with default headers values
func NewAccountsTransactionsByAccountIDGetBadRequest() *AccountsTransactionsByAccountIDGetBadRequest {

	return &AccountsTransactionsByAccountIDGetBadRequest{}
}

// WithPayload adds the payload to the accounts transactions by account Id get bad request response
func (o *AccountsTransactionsByAccountIDGetBadRequest) WithPayload(payload *models.TppMessage) *AccountsTransactionsByAccountIDGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id get bad request response
func (o *AccountsTransactionsByAccountIDGetBadRequest) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AccountsTransactionsByAccountIDGetUnauthorizedCode is the HTTP code returned for type AccountsTransactionsByAccountIDGetUnauthorized
const AccountsTransactionsByAccountIDGetUnauthorizedCode int = 401

/*AccountsTransactionsByAccountIDGetUnauthorized Unauthorized

swagger:response accountsTransactionsByAccountIdGetUnauthorized
*/
type AccountsTransactionsByAccountIDGetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDGetUnauthorized creates AccountsTransactionsByAccountIDGetUnauthorized with default headers values
func NewAccountsTransactionsByAccountIDGetUnauthorized() *AccountsTransactionsByAccountIDGetUnauthorized {

	return &AccountsTransactionsByAccountIDGetUnauthorized{}
}

// WithPayload adds the payload to the accounts transactions by account Id get unauthorized response
func (o *AccountsTransactionsByAccountIDGetUnauthorized) WithPayload(payload *models.TppMessage) *AccountsTransactionsByAccountIDGetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id get unauthorized response
func (o *AccountsTransactionsByAccountIDGetUnauthorized) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDGetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AccountsTransactionsByAccountIDGetForbiddenCode is the HTTP code returned for type AccountsTransactionsByAccountIDGetForbidden
const AccountsTransactionsByAccountIDGetForbiddenCode int = 403

/*AccountsTransactionsByAccountIDGetForbidden Forbidden

swagger:response accountsTransactionsByAccountIdGetForbidden
*/
type AccountsTransactionsByAccountIDGetForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDGetForbidden creates AccountsTransactionsByAccountIDGetForbidden with default headers values
func NewAccountsTransactionsByAccountIDGetForbidden() *AccountsTransactionsByAccountIDGetForbidden {

	return &AccountsTransactionsByAccountIDGetForbidden{}
}

// WithPayload adds the payload to the accounts transactions by account Id get forbidden response
func (o *AccountsTransactionsByAccountIDGetForbidden) WithPayload(payload *models.TppMessage) *AccountsTransactionsByAccountIDGetForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id get forbidden response
func (o *AccountsTransactionsByAccountIDGetForbidden) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDGetForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AccountsTransactionsByAccountIDGetDefault Internal Server Error

swagger:response accountsTransactionsByAccountIdGetDefault
*/
type AccountsTransactionsByAccountIDGetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.TppMessage `json:"body,omitempty"`
}

// NewAccountsTransactionsByAccountIDGetDefault creates AccountsTransactionsByAccountIDGetDefault with default headers values
func NewAccountsTransactionsByAccountIDGetDefault(code int) *AccountsTransactionsByAccountIDGetDefault {
	if code <= 0 {
		code = 500
	}

	return &AccountsTransactionsByAccountIDGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the accounts transactions by account Id get default response
func (o *AccountsTransactionsByAccountIDGetDefault) WithStatusCode(code int) *AccountsTransactionsByAccountIDGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the accounts transactions by account Id get default response
func (o *AccountsTransactionsByAccountIDGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the accounts transactions by account Id get default response
func (o *AccountsTransactionsByAccountIDGetDefault) WithPayload(payload *models.TppMessage) *AccountsTransactionsByAccountIDGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the accounts transactions by account Id get default response
func (o *AccountsTransactionsByAccountIDGetDefault) SetPayload(payload *models.TppMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AccountsTransactionsByAccountIDGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
